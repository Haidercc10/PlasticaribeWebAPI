// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlasticaribeAPI.Data;

#nullable disable

namespace PlasticaribeAPI.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20220702164040_CiudadTelefonoNullablesEnProveedor")]
    partial class CiudadTelefonoNullablesEnProveedor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlasticaribeAPI.Models.Area", b =>
                {
                    b.Property<long>("Area_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Area_Id"), 1L, 1);

                    b.Property<string>("Area_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Area_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Area_Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_MatPrima", b =>
                {
                    b.Property<long>("AsigMp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigMp_Id"), 1L, 1);

                    b.Property<long>("AsigMP_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AsigMp_FechaEntrega")
                        .HasColumnType("Date");

                    b.Property<int>("AsigMp_Maquina")
                        .HasColumnType("int");

                    b.Property<string>("AsigMp_Observacion")
                        .HasColumnType("text");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigMp_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Asignaciones_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.cajaCompensacion", b =>
                {
                    b.Property<long>("cajComp_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("cajComp_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("cajComp_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("cajComp_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cajComp_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cajComp_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("cajComp_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("cajComp_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("Cajas_Compensaciones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Categoria_Insumo", b =>
                {
                    b.Property<int>("CatInsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatInsu_Id"), 1L, 1);

                    b.Property<string>("CatInsu_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CatInsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("CatInsu_Id");

                    b.ToTable("Categorias_Insumos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Categoria_MatPrima", b =>
                {
                    b.Property<int>("CatMP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatMP_Id"), 1L, 1);

                    b.Property<string>("CatMP_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("CatMP_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("CatMP_Id");

                    b.ToTable("Categorias_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Cliente_Producto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Prod_Id", "Cli_Id");

                    b.HasIndex("Cli_Id");

                    b.ToTable("Clientes_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Clientes", b =>
                {
                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Cli_Codigo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cli_Codigo"), 1L, 1);

                    b.Property<string>("Cli_Email")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Cli_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Cli_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("TPCli_Id")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Cli_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("TPCli_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("usua_Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_MateriaPrima", b =>
                {
                    b.Property<long>("AsigMp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigMp_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("AsigMp_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignaciones_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleRecuperado_MateriaPrima", b =>
                {
                    b.Property<long>("RecMp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RecMatPri_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TpRecu_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("RecMp_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("TpRecu_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesRecuperados_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Empresa", b =>
                {
                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Empresa_COdigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Empresa_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Empresa_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Empresa_Codigo"), 1L, 1);

                    b.Property<string>("Empresa_Correo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empresa_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empresa_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Empresa_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Empresa_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EPS", b =>
                {
                    b.Property<long>("eps_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("eps_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("eps_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eps_Codigo"), 1L, 1);

                    b.Property<long>("eps_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("eps_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("eps_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("eps_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("eps_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("eps_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("EPS");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Estado", b =>
                {
                    b.Property<int>("Estado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Estado_Id"), 1L, 1);

                    b.Property<string>("Estado_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Estado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TpEstado_Id")
                        .HasColumnType("int");

                    b.HasKey("Estado_Id");

                    b.HasIndex("TpEstado_Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Existencia_Productos", b =>
                {
                    b.Property<long>("ExProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ExProd_Id"), 1L, 1);

                    b.Property<decimal>("ExProd_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("ExProd_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExProd_PrecioExistencia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ExProd_PrecioSinInflacion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ExProd_PrecioVenta")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<string>("TpMoneda_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(3);

                    b.HasKey("ExProd_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("TpMoneda_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Existencias_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Factura_Compra", b =>
                {
                    b.Property<long>("Facco_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Facco_Id"), 1L, 1);

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Facco_Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Facco_FechaFactura")
                        .HasColumnType("Date");

                    b.Property<DateTime>("Facco_FechaVencimiento")
                        .HasColumnType("Date");

                    b.Property<string>("Facco_Observacion")
                        .HasColumnType("text");

                    b.Property<decimal>("Facco_ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpDoc_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Facco_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Facturas_Compras");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.FacturaCompra_MateriaPrima", b =>
                {
                    b.Property<long>("Facco_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("FaccoMatPri_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("FaccoMatPri_ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Facco_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("FacturasCompras_MateriaPrimas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.fondoPension", b =>
                {
                    b.Property<long>("fPen_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("fPen_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("fPen_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPen_Codigo"), 1L, 1);

                    b.Property<long>("fPen_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("fPen_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fPen_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fPen_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fPen_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("fPen_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("FondosPensiones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Insumo", b =>
                {
                    b.Property<int>("Insu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Insu_Id"), 1L, 1);

                    b.Property<int>("CatInsu_Id")
                        .HasColumnType("int");

                    b.Property<string>("Insu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Insu_Stock")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Insu_Id");

                    b.HasIndex("CatInsu_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Materia_Prima", b =>
                {
                    b.Property<long>("MatPri_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MatPri_Id"), 1L, 1);

                    b.Property<int>("CatMP_Id")
                        .HasColumnType("int");

                    b.Property<string>("MatPri_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("MatPri_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("MatPri_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MatPri_Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("MatPri_Id");

                    b.HasIndex("CatMP_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Materias_Primas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Material_MatPrima", b =>
                {
                    b.Property<int>("Material_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Material_Id"), 1L, 1);

                    b.Property<string>("Material_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Material_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Material_Id");

                    b.ToTable("Materiales_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoExterno", b =>
                {
                    b.Property<long>("PedExt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PedExt_Id"), 1L, 1);

                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("PedExt_Archivo")
                        .IsRequired()
                        .HasColumnType("binary(4)");

                    b.Property<long>("PedExt_Codigo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PedExt_FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PedExt_FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("PedExt_Observacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PedExt_PrecioTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SedeCli_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Usua_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.HasKey("PedExt_Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("SedeCli_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Pedidos_Externos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoProducto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("PedExt_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PedExtProd_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal?>("PedExtProd_PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Prod_Id", "PedExt_Id");

                    b.HasIndex("PedExt_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("PedidosExternos_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Pigmento", b =>
                {
                    b.Property<int>("Pigmt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pigmt_Id"), 1L, 1);

                    b.Property<string>("Pigmt_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Pigmt_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Pigmt_Id");

                    b.ToTable("Pigmentos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Proceso", b =>
                {
                    b.Property<string>("Proceso_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Proceso_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Proceso_Codigo"), 1L, 1);

                    b.Property<string>("Proceso_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Proceso_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Proceso_Id");

                    b.ToTable("Procesos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Producto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Estado_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(14);

                    b.Property<int?>("Material_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(16);

                    b.Property<int?>("Pigmt_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(15);

                    b.Property<decimal?>("Prod_Ancho")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(9);

                    b.Property<decimal?>("Prod_Calibre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(11);

                    b.Property<int>("Prod_Cod")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prod_Cod"), 1L, 1);

                    b.Property<string>("Prod_Descripcion")
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<decimal?>("Prod_Fuelle")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(8);

                    b.Property<decimal?>("Prod_Largo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(10);

                    b.Property<string>("Prod_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Prod_Peso_Bruto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(5);

                    b.Property<decimal>("Prod_Peso_Neto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(6);

                    b.Property<int>("TpProd_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<string>("UndMedACF")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(12);

                    b.Property<string>("UndMedPeso")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(7);

                    b.HasKey("Prod_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("Pigmt_Id");

                    b.HasIndex("TpProd_Id");

                    b.HasIndex("UndMedACF");

                    b.HasIndex("UndMedPeso");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Provedor_MateriaPrima", b =>
                {
                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Prov_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.ToTable("Proveedores_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Proveedor", b =>
                {
                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Prov_Ciudad")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Prov_Codigo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Prov_Codigo"), 1L, 1);

                    b.Property<string>("Prov_Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Prov_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Prov_Telefono")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TpProv_Id")
                        .HasColumnType("int");

                    b.HasKey("Prov_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("TpProv_Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Recuperado_MatPrima", b =>
                {
                    b.Property<long>("RecMp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecMp_Id"), 1L, 1);

                    b.Property<string>("Proc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("RecMp_FechaIngreso")
                        .HasColumnType("date");

                    b.Property<string>("RecMp_Observacion")
                        .HasColumnType("text");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("RecMp_Id");

                    b.HasIndex("Proc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Recuperados_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision", b =>
                {
                    b.Property<int>("Rem_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rem_Id"), 1L, 1);

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Rem_Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Rem_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Rem_Observacion")
                        .HasColumnType("text");

                    b.Property<decimal?>("Rem_PrecioEstimado")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Rem_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Remisiones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_FacturaCompra", b =>
                {
                    b.Property<long>("Facco_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Rem_Id")
                        .HasColumnType("int");

                    b.HasKey("Facco_Id", "Rem_Id");

                    b.HasIndex("Rem_Id");

                    b.ToTable("Remisiones_FacturasCompras");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_MateriaPrima", b =>
                {
                    b.Property<int>("Rem_Id")
                        .HasColumnType("int");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RemiMatPri_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal?>("RemiMatPri_ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Rem_Id", "MatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Remisiones_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Rol_Usuario", b =>
                {
                    b.Property<int>("RolUsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolUsu_Id"), 1L, 1);

                    b.Property<string>("RolUsu_Descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RolUsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolUsu_Id");

                    b.ToTable("Roles_Usuarios");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.SedesClientes", b =>
                {
                    b.Property<long>("SedeCli_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("SedeCli_CodPostal")
                        .HasColumnType("bigint");

                    b.Property<int>("SedeCli_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedeCli_Codigo"), 1L, 1);

                    b.Property<string>("SedeCliente_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SedeCliente_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("SedeCli_Id");

                    b.HasIndex("Cli_Id");

                    b.ToTable("Sedes_Clientes");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Bodega", b =>
                {
                    b.Property<int>("TpBod_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpBod_Id"), 1L, 1);

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpBod_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TpBod_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpBod_Id");

                    b.HasIndex("Area_Id");

                    b.ToTable("Tipos_Bodegas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Documento", b =>
                {
                    b.Property<string>("TpDoc_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpDoc_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TpDoc_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpDoc_Id");

                    b.ToTable("Tipos_Documentos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Estado", b =>
                {
                    b.Property<int>("TpEstado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpEstado_Id"), 1L, 1);

                    b.Property<string>("TpEstado_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("TpEstado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpEstado_Id");

                    b.ToTable("Tipos_Estados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Moneda", b =>
                {
                    b.Property<string>("TpMoneda_Id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TpMoneda_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpMoneda_Codigo"), 1L, 1);

                    b.Property<string>("TpMoneda_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpMoneda_Id");

                    b.ToTable("Tipos_Monedas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Producto", b =>
                {
                    b.Property<int>("TpProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpProd_Id"), 1L, 1);

                    b.Property<string>("TpProd_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TpProd_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpProd_Id");

                    b.ToTable("Tipos_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Proveedor", b =>
                {
                    b.Property<int>("TpProv_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpProv_Id"), 1L, 1);

                    b.Property<string>("TpProv_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TpProv_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("TpProv_Id");

                    b.ToTable("Tipos_Proveedores");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Recuperado", b =>
                {
                    b.Property<string>("TpRecu_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpRecu_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("TpRecu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpRecu_Id");

                    b.ToTable("Tipos_Recuperados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Usuario", b =>
                {
                    b.Property<int>("tpUsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tpUsu_Id"), 1L, 1);

                    b.Property<string>("tpUsu_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tpUsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("tpUsu_Id");

                    b.ToTable("Tipos_Usuarios");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.TipoIdentificacion", b =>
                {
                    b.Property<string>("TipoIdentificacion_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoIdentificacion_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoIdentificacion_Codigo"), 1L, 1);

                    b.Property<string>("TipoIdentificacion_Descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TipoIdentificacion_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoIdentificacion_Id");

                    b.ToTable("TipoIdentificaciones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.TiposClientes", b =>
                {
                    b.Property<int>("TPCli_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TPCli_Id"), 1L, 1);

                    b.Property<string>("TPCli_Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("TPCli_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TPCli_Id");

                    b.ToTable("Tipos_Clientes");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Unidad_Medida", b =>
                {
                    b.Property<string>("UndMed_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UndMed_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UndMed_Codigo"), 1L, 1);

                    b.Property<string>("UndMed_Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UndMed_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("UndMed_Id");

                    b.ToTable("Unidades_Medidas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("RolUsu_Id")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Usua_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Usua_Codigo"), 1L, 1);

                    b.Property<string>("Usua_Contrasena")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usua_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usua_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usua_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("cajComp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("eps_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("fPen_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("tpUsu_Id")
                        .HasColumnType("int");

                    b.HasKey("Usua_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("RolUsu_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("cajComp_Id");

                    b.HasIndex("eps_Id");

                    b.HasIndex("fPen_Id");

                    b.HasIndex("tpUsu_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.cajaCompensacion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Cliente_Producto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Cli")
                        .WithMany("CliProd")
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany("CliProd")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cli");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Clientes", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.TiposClientes", "TPCli")
                        .WithMany()
                        .HasForeignKey("TPCli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("TPCli");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Asignacion_MatPrima", "AsigMp")
                        .WithMany("DtAsigMatPri")
                        .HasForeignKey("AsigMp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany("DtAsigMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigMp");

                    b.Navigation("MatPri");

                    b.Navigation("Proceso");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleRecuperado_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany("DetRecMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Recuperado_MatPrima", "RecMp")
                        .WithMany("DetRecMatPri")
                        .HasForeignKey("RecMp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Recuperado", "TpRecu")
                        .WithMany()
                        .HasForeignKey("TpRecu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("RecMp");

                    b.Navigation("TpRecu");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Empresa", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EPS", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Estado", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Tipo_Estado", null)
                        .WithMany()
                        .HasForeignKey("TpEstado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Existencia_Productos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Moneda", "TpMoneda")
                        .WithMany()
                        .HasForeignKey("TpMoneda_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prod");

                    b.Navigation("TpBod");

                    b.Navigation("TpMoneda");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Factura_Compra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Prov")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "TpDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Prov");

                    b.Navigation("TpDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.FacturaCompra_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Factura_Compra", "Facco")
                        .WithMany("FaccoMatPri")
                        .HasForeignKey("Facco_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany("FaccoMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Facco");

                    b.Navigation("MatPri");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.fondoPension", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Insumo", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Categoria_Insumo", null)
                        .WithMany()
                        .HasForeignKey("CatInsu_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", null)
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Materia_Prima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Categoria_MatPrima", "CatMP")
                        .WithMany()
                        .HasForeignKey("CatMP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CatMP");

                    b.Navigation("TpBod");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoExterno", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.SedesClientes", "SedeCli")
                        .WithMany()
                        .HasForeignKey("SedeCli_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("SedeCli");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoProducto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.PedidoExterno", "PedidoExt")
                        .WithMany("PedExtProd")
                        .HasForeignKey("PedExt_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Product")
                        .WithMany("PedExtProd")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PedidoExt");

                    b.Navigation("Product");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Producto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Material_MatPrima", "MaterialMP")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Pigmento", "Pigmt")
                        .WithMany()
                        .HasForeignKey("Pigmt_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Producto", "TpProd")
                        .WithMany()
                        .HasForeignKey("TpProd_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed2")
                        .WithMany()
                        .HasForeignKey("UndMedACF")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed1")
                        .WithMany()
                        .HasForeignKey("UndMedPeso")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("MaterialMP");

                    b.Navigation("Pigmt");

                    b.Navigation("TpProd");

                    b.Navigation("UndMed1");

                    b.Navigation("UndMed2");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Provedor_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany("ProvMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Prov")
                        .WithMany("ProvMatPri")
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("Prov");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Proveedor", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Proveedor", "TpProv")
                        .WithMany()
                        .HasForeignKey("TpProv_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("TpProv");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Recuperado_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proceso");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Prov")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "TpDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Prov");

                    b.Navigation("TpDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_FacturaCompra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Factura_Compra", "Faccom")
                        .WithMany("RemiFacco")
                        .HasForeignKey("Facco_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Remision", "Remi")
                        .WithMany("RemiFacco")
                        .HasForeignKey("Rem_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faccom");

                    b.Navigation("Remi");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany("RemiMatPri")
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Remision", "Rem")
                        .WithMany("RemiMatPri")
                        .HasForeignKey("Rem_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("Rem");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.SedesClientes", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Cli")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cli");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Bodega", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Usuario", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Rol_Usuario", "RolUsu")
                        .WithMany()
                        .HasForeignKey("RolUsu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.cajaCompensacion", "cajComp")
                        .WithMany()
                        .HasForeignKey("cajComp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.EPS", "EPS")
                        .WithMany()
                        .HasForeignKey("eps_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.fondoPension", "fPen")
                        .WithMany()
                        .HasForeignKey("fPen_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Usuario", "tpUsu")
                        .WithMany()
                        .HasForeignKey("tpUsu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("EPS");

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("RolUsu");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("cajComp");

                    b.Navigation("fPen");

                    b.Navigation("tpUsu");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_MatPrima", b =>
                {
                    b.Navigation("DtAsigMatPri");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Clientes", b =>
                {
                    b.Navigation("CliProd");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Factura_Compra", b =>
                {
                    b.Navigation("FaccoMatPri");

                    b.Navigation("RemiFacco");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Materia_Prima", b =>
                {
                    b.Navigation("DetRecMatPri");

                    b.Navigation("DtAsigMatPri");

                    b.Navigation("FaccoMatPri");

                    b.Navigation("ProvMatPri");

                    b.Navigation("RemiMatPri");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoExterno", b =>
                {
                    b.Navigation("PedExtProd");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Producto", b =>
                {
                    b.Navigation("CliProd");

                    b.Navigation("PedExtProd");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Proveedor", b =>
                {
                    b.Navigation("ProvMatPri");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Recuperado_MatPrima", b =>
                {
                    b.Navigation("DetRecMatPri");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision", b =>
                {
                    b.Navigation("RemiFacco");

                    b.Navigation("RemiMatPri");
                });
#pragma warning restore 612, 618
        }
    }
}
