// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlasticaribeAPI.Data;

#nullable disable

namespace PlasticaribeAPI.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20231226152113_PrecioVentaProductos_ProduccionProcesos")]
    partial class PrecioVentaProductos_ProduccionProcesos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlasticaribeAPI.Models.Activo", b =>
                {
                    b.Property<long>("Actv_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Actv_Id"));

                    b.Property<decimal?>("Actv_Depreciacion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Actv_FechaCompra")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Actv_FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Actv_FechaUltimoMtto")
                        .HasColumnType("date");

                    b.Property<string>("Actv_HoraCreacion")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Actv_Marca")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actv_Modelo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actv_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actv_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Actv_PrecioCompra")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Actv_Serial")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("TpActv_Id")
                        .HasColumnType("int");

                    b.HasKey("Actv_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("TpActv_Id");

                    b.ToTable("Activos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Archivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Archivos", t =>
                        {
                            t.HasTrigger("Auditoria_Archivos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Area", b =>
                {
                    b.Property<long>("Area_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Area_Id"));

                    b.Property<string>("Area_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Area_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Area_Id");

                    b.ToTable("Areas", t =>
                        {
                            t.HasTrigger("Auditoria_Areas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.AsignacionProducto_FacturaVenta", b =>
                {
                    b.Property<long>("AsigProdFV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigProdFV_Id"));

                    b.Property<DateTime>("AsigProdFV_Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("AsigProdFV_FechaEnvio")
                        .HasColumnType("date");

                    b.Property<string>("AsigProdFV_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AsigProdFV_HoraEnvio")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AsigProdFV_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AsigProdFV_PlacaCamion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("FacturaVta_Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NotaCredito_Id")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Usua_Conductor")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigProdFV_Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("Usua_Conductor");

                    b.HasIndex("Usua_Id");

                    b.ToTable("AsignacionesProductos_FacturasVentas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.AsignacionRollos_Extrusion", b =>
                {
                    b.Property<int>("AsgRollos_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsgRollos_Id"));

                    b.Property<DateTime>("AsgRollos_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("AsgRollos_Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AsgRollos_Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsgRollos_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("AsignacionRollos_Extrusion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_BOPP", b =>
                {
                    b.Property<long>("AsigBOPP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigBOPP_Id"));

                    b.Property<DateTime>("AsigBOPP_FechaEntrega")
                        .HasColumnType("Date");

                    b.Property<string>("AsigBOPP_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AsigBOPP_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigBOPP_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Asignaciones_BOPP");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_MatPrima", b =>
                {
                    b.Property<long>("AsigMp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigMp_Id"));

                    b.Property<long>("AsigMP_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AsigMp_FechaEntrega")
                        .HasColumnType("Date");

                    b.Property<string>("AsigMp_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("AsigMp_Maquina")
                        .HasColumnType("int");

                    b.Property<string>("AsigMp_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Estado_OrdenTrabajo")
                        .HasColumnType("int");

                    b.Property<long?>("SolMpExt_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigMp_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Estado_OrdenTrabajo");

                    b.HasIndex("SolMpExt_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Asignaciones_MatPrima", t =>
                        {
                            t.HasTrigger("TR_EstadosOTAsignado");

                            t.HasTrigger("TR_IU_ActualizaEstados_EnEstadosProcesosOT");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_MatPrimaXTinta", b =>
                {
                    b.Property<long>("AsigMPxTinta_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsigMPxTinta_Id"));

                    b.Property<decimal>("AsigMPxTinta_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime>("AsigMPxTinta_FechaEntrega")
                        .HasColumnType("Date");

                    b.Property<string>("AsigMPxTinta_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AsigMPxTinta_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("AsigMPxTinta_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Asignaciones_MatPrimasXTintas", t =>
                        {
                            t.HasTrigger("Entrada_CreacionTintas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.BOPP", b =>
                {
                    b.Property<long>("BOPP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BOPP_Id"));

                    b.Property<decimal>("BOPP_Ancho")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BOPP_CantidadInicialKg")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("BOPP_CantidadMicras")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BOPP_CodigoDoc")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BOPP_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime>("BOPP_FechaIngreso")
                        .HasColumnType("Date");

                    b.Property<string>("BOPP_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BOPP_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("BOPP_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("BOPP_Serial")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BOPP_Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BOPP_TipoDoc")
                        .HasColumnType("varchar(10)");

                    b.Property<long>("BoppGen_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("CatMP_Id")
                        .HasColumnType("int");

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Kg")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("BOPP_Id");

                    b.HasIndex("BoppGen_Id");

                    b.HasIndex("CatMP_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("UndMed_Kg");

                    b.HasIndex("Usua_Id");

                    b.ToTable("BOPP", t =>
                        {
                            t.HasTrigger("Auditoria_BOPP");

                            t.HasTrigger("Movimientos_EntradaBOPP");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Bodegas_Rollos", b =>
                {
                    b.Property<long>("BgRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BgRollo_Id"));

                    b.Property<DateTime>("BgRollo_FechaEntrada")
                        .HasColumnType("date");

                    b.Property<DateTime>("BgRollo_FechaModifica")
                        .HasColumnType("date");

                    b.Property<string>("BgRollo_HoraEntrada")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BgRollo_HoraModifica")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BgRollo_Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BgRollo_Id");

                    b.ToTable("Bodegas_Rollos", t =>
                        {
                            t.HasTrigger("Auditoria_Bodegas_Rollos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Bopp_Generico", b =>
                {
                    b.Property<long>("BoppGen_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BoppGen_Id"));

                    b.Property<decimal>("BoppGen_Ancho")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BoppGen_FechaIngreso")
                        .HasColumnType("Date");

                    b.Property<string>("BoppGen_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<long>("BoppGen_Micra")
                        .HasPrecision(18, 2)
                        .HasColumnType("bigint");

                    b.Property<string>("BoppGen_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("BoppGen_PrecioEstandar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BoppGen_Id");

                    b.ToTable("Bopp_Generico", t =>
                        {
                            t.HasTrigger("Auditoria_Bopp_Generico");

                            t.HasTrigger("Insert_Prod_BoppGenerico");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.CajaMenor_Plasticaribe", b =>
                {
                    b.Property<int>("CajaMenor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CajaMenor_Id"));

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CajaMenor_FechaRegistro")
                        .HasColumnType("date");

                    b.Property<DateTime>("CajaMenor_FechaSalida")
                        .HasColumnType("date");

                    b.Property<string>("CajaMenor_HoraRegistro")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CajaMenor_Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("CajaMenor_ValorSalida")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TpSal_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("CajaMenor_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("TpSal_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("CajaMenor_Plasticaribe", t =>
                        {
                            t.HasTrigger("Auditoria_CajaMenor_Plasticaribe");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Categoria_Insumo", b =>
                {
                    b.Property<int>("CatInsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatInsu_Id"));

                    b.Property<string>("CatInsu_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CatInsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CatInsu_UrlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatInsu_Id");

                    b.ToTable("Categorias_Insumos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Categoria_MatPrima", b =>
                {
                    b.Property<int>("CatMP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatMP_Id"));

                    b.Property<string>("CatMP_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("CatMP_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("CatMP_Id");

                    b.ToTable("Categorias_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Categorias_Archivos", b =>
                {
                    b.Property<int>("Categoria_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Categoria_Id"));

                    b.Property<string>("Categoria_Descricion")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Categoria_Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Categoria_Id");

                    b.ToTable("Categorias_Archivos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Certificados_Calidad", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Consecutivo"));

                    b.Property<decimal>("Cantidad_Producir")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("Fecha_Orden")
                        .HasColumnType("date");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("date");

                    b.Property<string>("Hora_Registro")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Impresion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Item")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Maximo_AnchoFrente")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Maximo_AnchoFuelle")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Maximo_Calibre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Maximo_Cof")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Maximo_LargoRepeticion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Minimo_AnchoFrente")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Minimo_AnchoFuelle")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Minimo_Calibre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Minimo_Cof")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Minimo_LargoRepeticion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nominal_AnchoFrente")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nominal_AnchoFuelle")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nominal_Calibre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nominal_Cof")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nominal_LargoRepeticion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Orden_Trabajo")
                        .HasColumnType("bigint");

                    b.Property<string>("Presentacion_Producto")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Resistencia")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Sellabilidad")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Tolerancia_AnchoFrente")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tolerancia_AnchoFuelle")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tolerancia_Calibre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tolerancia_Cof")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tolerancia_LargoRepeticion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Transparencia")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Tratado")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Unidad_AnchoFrente")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Unidad_AnchoFuelle")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Unidad_Calibre")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Unidad_Cof")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Unidad_LargoRepeticion")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Consecutivo");

                    b.HasIndex("Item");

                    b.HasIndex("Presentacion_Producto");

                    b.HasIndex("Unidad_AnchoFrente");

                    b.HasIndex("Unidad_AnchoFuelle");

                    b.HasIndex("Unidad_Calibre");

                    b.HasIndex("Unidad_Cof");

                    b.HasIndex("Unidad_LargoRepeticion");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Certificados_Calidad", t =>
                        {
                            t.HasTrigger("Auditoria_Certificados_Calidad");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Cliente_Producto", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("Prod_Id");

                    b.ToTable("Clientes_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Clientes", b =>
                {
                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Cli_Codigo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cli_Codigo"));

                    b.Property<string>("Cli_Email")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime?>("Cli_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Cli_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cli_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Cli_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("TPCli_Id")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Cli_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("TPCli_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("usua_Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Conceptos_Automaticos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Base")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Porcentaje")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("TpCcpto_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TpCcpto_Id");

                    b.ToTable("Conceptos_Automaticos", t =>
                        {
                            t.HasTrigger("Auditoria_Conceptos_Automaticos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Cono", b =>
                {
                    b.Property<string>("Cono_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cono_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Cono_KgXCmsAncho")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Cono_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Cono_Id");

                    b.ToTable("Conos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_CorteDoblado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Ancho")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Calibre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Codigo_Barras")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("date");

                    b.Property<string>("Hora_Resgitros")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Maquina")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_Producto")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Orden_Trabajo")
                        .HasColumnType("bigint");

                    b.Property<string>("PasoEntre_Guia")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("Ronda")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo_Embobinado")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("ControlCalidad_CorteDoblado", t =>
                        {
                            t.HasTrigger("Auditoria_ControlCalidad_CorteDoblado");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_Extrusion", b =>
                {
                    b.Property<long>("CcExt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CcExt_Id"));

                    b.Property<decimal>("CcExt_Ancho")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CcExt_AnchoTubular")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CcExt_Apariencia")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("CcExt_CalibreMax")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CcExt_CalibreMin")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CcExt_CalibreProm")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CcExt_CalibreTB")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CcExt_Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("CcExt_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("CcExt_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CcExt_Maquina")
                        .HasColumnType("int");

                    b.Property<long>("CcExt_OT")
                        .HasColumnType("bigint");

                    b.Property<string>("CcExt_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("CcExt_PesoMetro")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CcExt_Rasgado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("CcExt_Rollo")
                        .HasColumnType("bigint");

                    b.Property<int>("CcExt_Ronda")
                        .HasColumnType("int");

                    b.Property<string>("CcExt_TipoBobina")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CcExt_Tratado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Pigmento_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("CcExt_Id");

                    b.HasIndex("Pigmento_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("ControlCalidad_Extrusion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_Impresion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adherencia_Tinta")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Ancho_Rollo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Codigo_Barras")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Conformidad_Laminado")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("date");

                    b.Property<bool>("Fotcelda_Derecha")
                        .HasColumnType("bit");

                    b.Property<bool>("Fotocelda_Izquierda")
                        .HasColumnType("bit");

                    b.Property<string>("Hora_Registro")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LoteRollo_SinImpresion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Maquina")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_Producto")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Orden_Trabajo")
                        .HasColumnType("bigint");

                    b.Property<string>("PasoGuia_Repetecion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("Prueba_Tratado")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Registro_Colores")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Ronda")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Secuencia_Amarillo")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Base")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Cian")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Magenta")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Negro")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Pantone1")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Pantone2")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Pantone3")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Secuencia_Pantone4")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Tipo_Embobinado")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("ControlCalidad_Impresion", t =>
                        {
                            t.HasTrigger("Auditoria_ControlCalidad_Extrusion");

                            t.HasTrigger("Auditoria_ControlCalidad_Impresion");

                            t.HasTrigger("Auditoria_ControlCalidad_Sellado");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_Sellado", b =>
                {
                    b.Property<long>("CcSel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CcSel_Id"));

                    b.Property<decimal>("AnchoFuelle_Abajo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AnchoFuelle_Der")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AnchoFuelle_Izq")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CcSel_Ancho")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CcSel_Calibre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CcSel_CantBolsasxPaq")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CcSel_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("CcSel_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CcSel_Impresion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("CcSel_Largo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CcSel_Maquina")
                        .HasColumnType("int");

                    b.Property<long>("CcSel_OT")
                        .HasColumnType("bigint");

                    b.Property<string>("CcSel_Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CcSel_Perforacion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CcSel_Precorte")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CcSel_PruebaFiltrado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CcSel_PruebaPresion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CcSel_Rasgado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CcSel_Ronda")
                        .HasColumnType("int");

                    b.Property<string>("CcSel_Sellabilidad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UndMed_AF")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_AL")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("CcSel_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("UndMed_AF");

                    b.HasIndex("UndMed_AL");

                    b.HasIndex("Usua_Id");

                    b.ToTable("ControlCalidad_Sellado");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Costos_Empresas_Anios", b =>
                {
                    b.Property<int>("CostosEmp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostosEmp_Id"));

                    b.Property<decimal>("Abril")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Agosto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("CostosEmp_Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Diciembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Enero")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Febrero")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Julio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Junio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Marzo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Mayo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Noviembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Octubre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Septiembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("CostosEmp_Id");

                    b.ToTable("Costos_Empresas_Anios", t =>
                        {
                            t.HasTrigger("Auditoria_Costos_Empresas_Anios");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Desperdicio", b =>
                {
                    b.Property<long>("Desp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Desp_Id"));

                    b.Property<DateTime>("Desp_Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Desp_FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Desp_HoraRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Desp_Impresion")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Desp_OT")
                        .HasColumnType("bigint");

                    b.Property<string>("Desp_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Desp_PesoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Falla_Id")
                        .HasColumnType("int");

                    b.Property<long>("Maquina")
                        .HasColumnType("bigint");

                    b.Property<int>("Material_Id")
                        .HasColumnType("int");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Operario")
                        .HasColumnType("bigint");

                    b.HasKey("Desp_Id");

                    b.HasIndex("Falla_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("Usua_Id");

                    b.HasIndex("Usua_Operario");

                    b.ToTable("Desperdicios", t =>
                        {
                            t.HasTrigger("Auditoria_Desperdicios");

                            t.HasTrigger("TR_InsertDesperdicioBagpro");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetSolicitud_MatPrimaExtrusion", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<decimal>("DtSolMpExt_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("SolMpExt_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("SolMpExt_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetSolicitud_MatPrimaExtrusion", t =>
                        {
                            t.HasTrigger("Auditoria_DetSolicitud_MatPrimaExtrusion");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_BOPP", b =>
                {
                    b.Property<long>("DtAsigBOPP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtAsigBOPP_Id"));

                    b.Property<long>("AsigBOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("BOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigBOPP_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("DtAsigBOPP_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<int?>("Estado_OrdenTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtAsigBOPP_Id");

                    b.HasIndex("AsigBOPP_Id");

                    b.HasIndex("BOPP_Id");

                    b.HasIndex("Estado_OrdenTrabajo");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignaciones_BOPP", t =>
                        {
                            t.HasTrigger("SumarCantAsignada_EPOT");

                            t.HasTrigger("TR_EstadosOTDetAsigBOPP");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_MatPrimaXTinta", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("AsigMPxTinta_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DetAsigMPxTinta_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("AsigMPxTinta_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignaciones_MatPrimasXTintas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_MateriaPrima", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("AsigMp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigMp_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("AsigMp_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignaciones_MateriasPrimas", t =>
                        {
                            t.HasTrigger("ActualizarMatPrima_AsignadaEPOT");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_Tinta", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("AsigMp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigTinta_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("AsigMp_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetalleAsignaciones_Tintas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleDevolucion_MateriaPrima", b =>
                {
                    b.Property<long>("DtDevMatPri_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtDevMatPri_Codigo"));

                    b.Property<long?>("BOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("DevMatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtDevMatPri_CantidadDevuelta")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtDevMatPri_Codigo");

                    b.HasIndex("BOPP_Id");

                    b.HasIndex("DevMatPri_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesDevoluciones_MateriasPrimas", t =>
                        {
                            t.HasTrigger("RestarCantMatPrimaAsignada_EPOTxDevolucion");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleDevolucion_ProductoFacturado", b =>
                {
                    b.Property<int>("DtDevProdFact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DtDevProdFact_Id"));

                    b.Property<long>("DevProdFact_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtDevProdFact_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtDevProdFact_Id");

                    b.HasIndex("DevProdFact_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesDevoluciones_ProductosFacturados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleEntradaRollo_Producto", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<decimal>("DtEntRolloProd_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("DtEntRolloProd_OT")
                        .HasColumnType("bigint");

                    b.Property<long>("EntRolloProd_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Proceso_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Prod_CantBolsasBulto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantBolsasFacturadas")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantBolsasPaquete")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantBolsasRestates")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantPaquetesRestantes")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(3);

                    b.Property<string>("UndMed_Prod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Rollo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("EntRolloProd_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Prod");

                    b.HasIndex("UndMed_Rollo");

                    b.ToTable("DetallesEntradasRollos_Productos", t =>
                        {
                            t.HasTrigger("TR_ActualizarCantIngresada");

                            t.HasTrigger("TR_ActualizarCantIngresada_Facturada");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleFacturacion_OrdenMaquila", b =>
                {
                    b.Property<long>("DtFacOM_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtFacOM_Codigo"));

                    b.Property<long>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtFacOM_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("DtFacOM_ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("FacOM_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtFacOM_Codigo");

                    b.HasIndex("Bopp_Id");

                    b.HasIndex("FacOM_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetalleFacturacion_OrdenMaquila", t =>
                        {
                            t.HasTrigger("Auditoria_DetalleFacturacion_OrdenMaquila");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallePedido_Mantenimiento", b =>
                {
                    b.Property<long>("DtPedMtto_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtPedMtto_Codigo"));

                    b.Property<long>("Actv_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DtPedMtto_FechaFalla")
                        .HasColumnType("date");

                    b.Property<long>("PedMtto_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("TpMtto_Id")
                        .HasColumnType("int");

                    b.HasKey("DtPedMtto_Codigo");

                    b.HasIndex("Actv_Id");

                    b.HasIndex("PedMtto_Id");

                    b.HasIndex("TpMtto_Id");

                    b.ToTable("DetallesPedidos_Mantenimientos", t =>
                        {
                            t.HasTrigger("Auditoria_DetallesPedidos_Mantenimientos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallePreEntrega_RolloDespacho", b =>
                {
                    b.Property<long>("DtlPreEntRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtlPreEntRollo_Id"));

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(5);

                    b.Property<decimal>("DtlPreEntRollo_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("DtlPreEntRollo_OT")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("PreEntRollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Producto")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(4);

                    b.Property<string>("UndMed_Rollo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtlPreEntRollo_Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("PreEntRollo_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Producto");

                    b.HasIndex("UndMed_Rollo");

                    b.ToTable("DetallesPreEntrega_RollosDespacho");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleRecuperado_MateriaPrima", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RecMatPri_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("RecMp_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpRecu_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("RecMp_Id");

                    b.HasIndex("TpRecu_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesRecuperados_MateriasPrimas", t =>
                        {
                            t.HasTrigger("Movimientos_Entradas_MP_Recuperado");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalle_Mantenimiento", b =>
                {
                    b.Property<long>("DtMtto_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtMtto_Codigo"));

                    b.Property<long>("Actv_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("DtMtto_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("DtMtto_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Mtto_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("TpMtto_Id")
                        .HasColumnType("int");

                    b.HasKey("DtMtto_Codigo");

                    b.HasIndex("Actv_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Mtto_Id");

                    b.HasIndex("TpMtto_Id");

                    b.ToTable("Detalles_Mantenimientos", t =>
                        {
                            t.HasTrigger("ActualizarMantenimiento_Pedido");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalle_OrdenCompra", b =>
                {
                    b.Property<long>("Doc_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Doc_Codigo"));

                    b.Property<long>("BOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Doc_CantidadPedida")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Doc_PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Oc_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Doc_Codigo");

                    b.HasIndex("BOPP_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Oc_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalles_OrdenesCompras", t =>
                        {
                            t.HasTrigger("Auditoria_Detalles_OrdenesCompras");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalle_OrdenMaquila", b =>
                {
                    b.Property<long>("DtOM_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtOM_Codigo"));

                    b.Property<long>("BOPP_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtOM_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DtOM_PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OM_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtOM_Codigo");

                    b.HasIndex("BOPP_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("OM_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalle_OrdenMaquila", t =>
                        {
                            t.HasTrigger("Auditoria_Detalle_OrdenMaquila");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallesAsgRollos_Extrusion", b =>
                {
                    b.Property<int>("DtAsgRollos_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DtAsgRollos_Id"));

                    b.Property<int>("AsgRollos_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("DtAsgRollos_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("DtAsgRollos_OT")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtAsgRollos_Id");

                    b.HasIndex("AsgRollos_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsgRollos_Extrusion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallesAsignacionProducto_FacturaVenta", b =>
                {
                    b.Property<long>("DtAsigProdFV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtAsigProdFV_Id"));

                    b.Property<long>("AsigProdFV_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtAsigProdFV_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_CantidadUnidades")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtAsigProdFV_Id");

                    b.HasIndex("AsigProdFV_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesAsignacionesProductos_FacturasVentas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallesIngRollos_Extrusion", b =>
                {
                    b.Property<int>("DtIngRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DtIngRollo_Id"));

                    b.Property<decimal>("DtIngRollo_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DtIngRollo_OT")
                        .HasColumnType("int");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("IngRollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<int>("Rollo_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtIngRollo_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("IngRollo_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("DetallesIngRollos_Extrusion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_BodegasRollos", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<string>("BgRollo_BodegaActual")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("BgRollo_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("BgRollo_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtBgRollo_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<bool>("DtBgRollo_Corte")
                        .HasColumnType("bit");

                    b.Property<bool>("DtBgRollo_Despacho")
                        .HasColumnType("bit");

                    b.Property<bool>("DtBgRollo_Extrusion")
                        .HasColumnType("bit");

                    b.Property<bool>("DtBgRollo_Impresion")
                        .HasColumnType("bit");

                    b.Property<bool>("DtBgRollo_ProdIntermedio")
                        .HasColumnType("bit");

                    b.Property<long>("DtBgRollo_Rollo")
                        .HasColumnType("bigint");

                    b.Property<bool>("DtBgRollo_Rotograbado")
                        .HasColumnType("bit");

                    b.Property<bool>("DtBgRollo_Sellado")
                        .HasColumnType("bit");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("BgRollo_BodegaActual");

                    b.HasIndex("BgRollo_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalles_BodegasRollos", t =>
                        {
                            t.HasTrigger("Auditoria_Detalles_BodegasRollos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_EntradaTintas", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<decimal>("DtEntTinta_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EntTinta_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("EntTinta_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalles_EntradaTintas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_OrdenFacturacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id_OrdenFacturacion")
                        .HasColumnType("int");

                    b.Property<long>("Numero_Rollo")
                        .HasColumnType("bigint");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_OrdenFacturacion");

                    b.HasIndex("Presentacion");

                    b.HasIndex("Prod_Id");

                    b.ToTable("Detalles_OrdenFacturacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_SolicitudMateriaPrima", b =>
                {
                    b.Property<long>("DtSolicitud_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DtSolicitud_Id"));

                    b.Property<long>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DtSolicitud_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Solicitud_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("DtSolicitud_Id");

                    b.HasIndex("Bopp_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Solicitud_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalles_SolicitudMateriaPrima", t =>
                        {
                            t.HasTrigger("Auditoria_Detalles_SolicitudMateriaPrima");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_SolicitudRollos", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<string>("DtSolRollo_BodegaSolicitada")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DtSolRollo_BodegaSolicitante")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("DtSolRollo_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("DtSolRollo_Maquina")
                        .HasColumnType("bigint");

                    b.Property<long>("DtSolRollo_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long>("DtSolRollo_Rollo")
                        .HasColumnType("bigint");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("SolRollo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("DtSolRollo_BodegaSolicitada");

                    b.HasIndex("DtSolRollo_BodegaSolicitante");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("SolRollo_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Detalles_SolicitudRollos", t =>
                        {
                            t.HasTrigger("Auditoria_Detalles_SolicitudRollos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Devolucion_MatPrima", b =>
                {
                    b.Property<long>("DevMatPri_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DevMatPri_Id"));

                    b.Property<DateTime>("DevMatPri_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("DevMatPri_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DevMatPri_Motivo")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("DevMatPri_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("DevMatPri_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Devoluciones_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Devolucion_ProductoFacturado", b =>
                {
                    b.Property<long>("DevProdFact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DevProdFact_Id"));

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DevProdFact_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("DevProdFact_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DevProdFact_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FacturaVta_Id")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoDevProdFact_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("DevProdFact_Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("TipoDevProdFact_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Devoluciones_ProductosFacturados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EPS", b =>
                {
                    b.Property<long>("eps_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("eps_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("eps_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eps_Codigo"));

                    b.Property<long>("eps_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("eps_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("eps_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("eps_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("eps_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("eps_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("eps_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("eps_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("EPS");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Empresa", b =>
                {
                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Empresa_COdigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Empresa_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Empresa_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Empresa_Codigo"));

                    b.Property<string>("Empresa_Correo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empresa_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Empresa_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Empresa_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Empresa_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Empresa_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Empresa_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EntradaRollo_Producto", b =>
                {
                    b.Property<long>("EntRolloProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EntRolloProd_Id"));

                    b.Property<DateTime>("EntRolloProd_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("EntRolloProd_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EntRolloProd_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("EntRolloProd_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("EntradasRollos_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Entrada_Tintas", b =>
                {
                    b.Property<int>("EntTinta_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntTinta_Id"));

                    b.Property<string>("EntTinta_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("entTinta_FechaEntrada")
                        .HasColumnType("Date");

                    b.Property<string>("entTinta_Hora")
                        .HasColumnType("varchar(10)");

                    b.HasKey("EntTinta_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Entradas_Tintas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Entradas_Salidas_MP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Cant_PedidaOT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cantidad_Salida")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Codigo_Entrada")
                        .HasColumnType("int");

                    b.Property<int>("Codigo_Salida")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("date");

                    b.Property<string>("Hora_Registro")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Id_Entrada")
                        .HasColumnType("int");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Orden_Trabajo")
                        .HasColumnType("bigint");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo_Entrada")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tipo_Salida")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Bopp_Id");

                    b.HasIndex("Id_Entrada");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("Tipo_Entrada");

                    b.HasIndex("Tipo_Salida");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Entradas_Salidas_MP", t =>
                        {
                            t.HasTrigger("Auditoria_Entradas_Salidas_MP");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Estado", b =>
                {
                    b.Property<int>("Estado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Estado_Id"));

                    b.Property<string>("Estado_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Estado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TpEstado_Id")
                        .HasColumnType("int");

                    b.HasKey("Estado_Id");

                    b.HasIndex("TpEstado_Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Estados_ProcesosOT", b =>
                {
                    b.Property<long>("EstProcOT_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EstProcOT_Id"));

                    b.Property<long?>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EstProcOT_CantMatPrimaAsignada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_CantProdFacturada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_CantProdIngresada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_CantidadPedida")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EstProcOT_CantidadPedidaUnd")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EstProcOT_Cliente")
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("EstProcOT_CorteKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EstProcOT_DiffDiasInicio_Fin")
                        .HasColumnType("int");

                    b.Property<decimal>("EstProcOT_DobladoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_EmpaqueKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_ExtrusionKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EstProcOT_FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EstProcOT_FechaFinal")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EstProcOT_FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("EstProcOT_HoraFinal")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EstProcOT_HoraInicio")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("EstProcOT_ImpresionKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_LaminadoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EstProcOT_Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<long>("EstProcOT_OrdenTrabajo")
                        .HasColumnType("bigint");

                    b.Property<long?>("EstProcOT_Pedido")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EstProcOT_RotograbadoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_SelladoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_SelladoUnd")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_WiketiadoKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstProcOT_WiketiadoUnd")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("Falla_Id")
                        .HasColumnType("int");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("EstProcOT_Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Falla_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Estados_ProcesosOT", t =>
                        {
                            t.HasTrigger("Auditoria_Estados_ProcesosOT");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EventosCalendario", b =>
                {
                    b.Property<long>("EventoCal_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EventoCal_Id"));

                    b.Property<string>("EventoCal_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("EventoCal_FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("EventoCal_FechaFinal")
                        .HasColumnType("date");

                    b.Property<DateTime>("EventoCal_FechaInicial")
                        .HasColumnType("date");

                    b.Property<string>("EventoCal_HoraCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EventoCal_HoraFinal")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EventoCal_HoraInicial")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EventoCal_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("EventoCal_Visibilidad")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("EventoCal_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("EventosCalendario", t =>
                        {
                            t.HasTrigger("Auditoria_EventosCalendario");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Existencia_Productos", b =>
                {
                    b.Property<long>("ExProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ExProd_Id"));

                    b.Property<decimal>("ExProd_CantMinima")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExProd_Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("ExProd_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("ExProd_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ExProd_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExProd_PrecioExistencia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ExProd_PrecioSinInflacion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ExProd_PrecioVenta")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<string>("TpMoneda_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(3);

                    b.HasKey("ExProd_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("TpMoneda_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Existencias_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.FacturaCompra_MateriaPrima", b =>
                {
                    b.Property<long>("Facco_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Facco_Codigo"));

                    b.Property<long>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("FaccoMatPri_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("FaccoMatPri_ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Facco_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Facco_Codigo");

                    b.HasIndex("Bopp_Id");

                    b.HasIndex("Facco_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("FacturasCompras_MateriaPrimas", t =>
                        {
                            t.HasTrigger("Movimientos_Entradas_MP");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Factura_Compra", b =>
                {
                    b.Property<long>("Facco_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Facco_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Facco_Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Facco_FechaFactura")
                        .HasColumnType("Date");

                    b.Property<DateTime>("Facco_FechaVencimiento")
                        .HasColumnType("Date");

                    b.Property<string>("Facco_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Facco_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Facco_ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpDoc_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Facco_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Facturas_Compras");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Facturacion_OrdenMaquila", b =>
                {
                    b.Property<long>("FacOM_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FacOM_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("FacOM_Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FacOM_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("FacOM_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FacOM_Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FacOM_ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tercero_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TpDoc_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("FacOM_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Tercero_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Facturacion_OrdenMaquila", t =>
                        {
                            t.HasTrigger("Auditoria_Facturacion_OrdenMaquila");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Facturas_Invergoal_Inversuez", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo_Factura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado_Factura")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Factura")
                        .HasColumnType("date");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("date");

                    b.Property<DateTime>("Fecha_Vencimiento")
                        .HasColumnType("date");

                    b.Property<string>("Hora_Registro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit_Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Nit_Proveedor")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre_Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Restar_DashboardCostos")
                        .HasColumnType("bit");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Valor_Factura")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("Estado_Factura");

                    b.HasIndex("Nit_Proveedor");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Facturas_Invergoal_Inversuez", t =>
                        {
                            t.HasTrigger("Auditoria_Facturas_Invergoal_Inversuez");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Falla_Tecnica", b =>
                {
                    b.Property<int>("Falla_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Falla_Id"));

                    b.Property<string>("Falla_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Falla_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Fecha_Creacion")
                        .HasColumnType("Date");

                    b.Property<string>("Hora_Creacion")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoFalla_Id")
                        .HasColumnType("int");

                    b.HasKey("Falla_Id");

                    b.HasIndex("TipoFalla_Id");

                    b.ToTable("Fallas_Tecnicas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Formato", b =>
                {
                    b.Property<long>("Formato_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Formato_Id"));

                    b.Property<string>("Formato_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Formato_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Formato_Id");

                    b.ToTable("Formato");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Formato_Documentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Reporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vigencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Formato_Documentos", t =>
                        {
                            t.HasTrigger("Auditoria_Formato_Documentos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.IngresoRollos_Extrusion", b =>
                {
                    b.Property<long>("IngRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IngRollo_Id"));

                    b.Property<DateTime>("IngRollo_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("IngRollo_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IngRollo_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("IngRollo_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("IngresoRollos_Extrusion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Insumo", b =>
                {
                    b.Property<int>("Insu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Insu_Id"));

                    b.Property<int>("CatInsu_Id")
                        .HasColumnType("int");

                    b.Property<string>("Insu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Insu_Stock")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Insu_Id");

                    b.HasIndex("CatInsu_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.InventarioInicialXDia_MatPrima", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<decimal>("Abril")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Agosto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long?>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Diciembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Enero")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Febrero")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("InvInicial_Stock")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Julio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Junio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Marzo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Mayo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Noviembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Octubre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Septiembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("InventarioInicialXDias_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Inventario_Areas", b =>
                {
                    b.Property<long>("InvCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvCodigo"));

                    b.Property<DateTime>("InvFecha_Inventario")
                        .HasColumnType("date");

                    b.Property<DateTime>("InvFecha_Registro")
                        .HasColumnType("date");

                    b.Property<string>("InvHora_Registro")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("InvObservacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("InvPrecio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvStock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OT")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("InvCodigo");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Inventarios_Areas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Inventario_Mensual_Productos", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<decimal>("Abril")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Agosto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Diciembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Enero")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Febrero")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Julio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Junio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Marzo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Mayo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Noviembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Octubre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("Prod_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Septiembre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Inventario_Mensual_Productos", t =>
                        {
                            t.HasTrigger("Auditoria_Inventario_Mensual_Productos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Laminado_Capa", b =>
                {
                    b.Property<int>("LamCapa_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LamCapa_Id"));

                    b.Property<string>("LamCapa_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LamCapa_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("LamCapa_Id");

                    b.ToTable("Laminado_Capa");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Log_Errores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Base_Datos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorSeverity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log_Errores");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Log_Transacciones", b =>
                {
                    b.Property<int>("Transac_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Transac_Codigo"));

                    b.Property<string>("Transac_BaseDatos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transac_Campo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Transac_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Transac_Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transac_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transac_LlavePK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transac_Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transac_Tabla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transac_Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Transac_Usuario")
                        .HasColumnType("bigint");

                    b.Property<string>("Transac_ValorOriginal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transac_valorNuevo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Transac_Codigo");

                    b.HasIndex("Transac_Usuario");

                    b.ToTable("Log_Transacciones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Mantenimiento", b =>
                {
                    b.Property<long>("Mtto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Mtto_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Mtto_CantDias")
                        .HasColumnType("int");

                    b.Property<DateTime>("Mtto_FechaFin")
                        .HasColumnType("date");

                    b.Property<DateTime>("Mtto_FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Mtto_FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Mtto_HoraRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Mtto_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Mtto_PrecioTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PedMtto_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Mtto_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("PedMtto_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Mantenimientos", t =>
                        {
                            t.HasTrigger("ActualizarEstado_PedidoMtto");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Materia_Prima", b =>
                {
                    b.Property<long>("MatPri_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MatPri_Id"));

                    b.Property<int>("CatMP_Id")
                        .HasColumnType("int");

                    b.Property<string>("MatPri_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime?>("MatPri_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("MatPri_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MatPri_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("MatPri_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MatPri_PrecioEstandar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MatPri_Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("MatPri_Id");

                    b.HasIndex("CatMP_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Materias_Primas", t =>
                        {
                            t.HasTrigger("Auditoria_Materias_Primas");

                            t.HasTrigger("Insert_Prod_MateriasPrimas");

                            t.HasTrigger("TR_InventarioDiarioMateriasPrimas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Material_MatPrima", b =>
                {
                    b.Property<int>("Material_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Material_Id"));

                    b.Property<string>("Material_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Material_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Material_Id");

                    b.ToTable("Materiales_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Mezcla", b =>
                {
                    b.Property<long>("Mezcla_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Mezcla_Id"));

                    b.Property<int>("Material_Id")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id1xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id1xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id1xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id2xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id2xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id2xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id3xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id3xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id3xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id4xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id4xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezMaterial_Id4xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id1xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id1xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id1xCapa3")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id2xCapa1")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id2xCapa2")
                        .HasColumnType("int");

                    b.Property<int>("MezPigmto_Id2xCapa3")
                        .HasColumnType("int");

                    b.Property<DateTime>("Mezcla_FechaIngreso")
                        .HasColumnType("date");

                    b.Property<string>("Mezcla_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("Mezcla_NroCapas")
                        .HasColumnType("int");

                    b.Property<int>("Mezcla_PorcentajeCapa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("int");

                    b.Property<int>("Mezcla_PorcentajeCapa2")
                        .HasColumnType("int");

                    b.Property<int>("Mezcla_PorcentajeCapa3")
                        .HasColumnType("int");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial1_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial1_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial1_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial2_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial2_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial2_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial3_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial3_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial3_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial4_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial4_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajeMaterial4_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto1_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto1_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto1_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto2_Capa1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto2_Capa2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mezcla_PorcentajePigmto2_Capa3")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Mezcla_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("MezMaterial_Id1xCapa1");

                    b.HasIndex("MezMaterial_Id1xCapa2");

                    b.HasIndex("MezMaterial_Id1xCapa3");

                    b.HasIndex("MezMaterial_Id2xCapa1");

                    b.HasIndex("MezMaterial_Id2xCapa2");

                    b.HasIndex("MezMaterial_Id2xCapa3");

                    b.HasIndex("MezMaterial_Id3xCapa1");

                    b.HasIndex("MezMaterial_Id3xCapa2");

                    b.HasIndex("MezMaterial_Id3xCapa3");

                    b.HasIndex("MezMaterial_Id4xCapa1");

                    b.HasIndex("MezMaterial_Id4xCapa2");

                    b.HasIndex("MezMaterial_Id4xCapa3");

                    b.HasIndex("MezPigmto_Id1xCapa1");

                    b.HasIndex("MezPigmto_Id1xCapa2");

                    b.HasIndex("MezPigmto_Id1xCapa3");

                    b.HasIndex("MezPigmto_Id2xCapa1");

                    b.HasIndex("MezPigmto_Id2xCapa2");

                    b.HasIndex("MezPigmto_Id2xCapa3");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Mezclas", t =>
                        {
                            t.HasTrigger("Auditoria_Mezclas");

                            t.HasTrigger("Crear_Mezclas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Mezcla_Material", b =>
                {
                    b.Property<int>("MezMaterial_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MezMaterial_Id"));

                    b.Property<string>("MezMaterial_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MezMaterial_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("MezMaterial_Id");

                    b.ToTable("Mezclas_Materiales", t =>
                        {
                            t.HasTrigger("Crear_Mezclas_Materiales");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Mezcla_Pigmento", b =>
                {
                    b.Property<int>("MezPigmto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MezPigmto_Id"));

                    b.Property<string>("MezPigmto_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MezPigmto_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("MezPigmto_Id");

                    b.ToTable("Mezclas_Pigmentos", t =>
                        {
                            t.HasTrigger("Crear_Mezcla_Pigmento");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.MovimientosAplicacion", b =>
                {
                    b.Property<int>("MovApp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovApp_Id"));

                    b.Property<string>("MovApp_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("MovApp_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("MovApp_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MovApp_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("MovApp_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("MovimientosAplicacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Movimientros_Entradas_MP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Cantidad_Asignada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cantidad_Disponible")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cantidad_Entrada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Codigo_Entrada")
                        .HasColumnType("int");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Entrada")
                        .HasColumnType("date");

                    b.Property<string>("Hora_Entrada")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Precio_EstandarUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Precio_RealUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo_Entrada")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Bopp_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("Tipo_Entrada");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Movimientros_Entradas_MP", t =>
                        {
                            t.HasTrigger("Auditoria_Movimientros_Entradas_MP");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Nomina_Plasticaribe", b =>
                {
                    b.Property<int>("Nomina_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Nomina_Id"));

                    b.Property<decimal>("Nomina_Costo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime>("Nomina_FechaFinal")
                        .HasColumnType("date");

                    b.Property<DateTime>("Nomina_FechaIncial")
                        .HasColumnType("date");

                    b.Property<DateTime>("Nomina_FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Nomina_HoraRegistro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nomina_Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TpNomina_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Nomina_Id");

                    b.HasIndex("TpNomina_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Nomina_Plasticaribe", t =>
                        {
                            t.HasTrigger("Auditoria_Nomina_Plasticaribe");

                            t.HasTrigger("Costos_Nomina_Plasticaribe");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Extrusion", b =>
                {
                    b.Property<int>("Extrusion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Extrusion_Id"));

                    b.Property<decimal>("Extrusion_Ancho1")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Extrusion_Ancho2")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Extrusion_Ancho3")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Extrusion_Calibre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Extrusion_Peso")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<long>("Formato_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Material_Id")
                        .HasColumnType("int");

                    b.Property<long>("Ot_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Pigmt_Id")
                        .HasColumnType("int");

                    b.Property<int>("Tratado_Id")
                        .HasPrecision(14, 2)
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Extrusion_Id");

                    b.HasIndex("Formato_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("Ot_Id");

                    b.HasIndex("Pigmt_Id");

                    b.HasIndex("Tratado_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("OT_Extrusion", t =>
                        {
                            t.HasTrigger("Auditoria_OT_Extrusion");

                            t.HasTrigger("TR_ActualizarCampos_OTExtrusion");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Impresion", b =>
                {
                    b.Property<int>("Impresion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Impresion_Id"));

                    b.Property<long>("Ot_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Pista_Id")
                        .HasColumnType("int");

                    b.Property<int>("Rodillo_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta1_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta2_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta3_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta4_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta5_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta6_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta7_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta8_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("TpImpresion_Id")
                        .HasColumnType("int");

                    b.HasKey("Impresion_Id");

                    b.HasIndex("Ot_Id");

                    b.HasIndex("Tinta1_Id");

                    b.HasIndex("Tinta2_Id");

                    b.HasIndex("Tinta3_Id");

                    b.HasIndex("Tinta4_Id");

                    b.HasIndex("Tinta5_Id");

                    b.HasIndex("Tinta6_Id");

                    b.HasIndex("Tinta7_Id");

                    b.HasIndex("Tinta8_Id");

                    b.HasIndex("TpImpresion_Id");

                    b.ToTable("OT_Impresion", t =>
                        {
                            t.HasTrigger("Auditoria_OT_Impresion");

                            t.HasTrigger("TR_ActualizarCampos_OTImpresion");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Laminado", b =>
                {
                    b.Property<int>("LamCapa_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LamCapa_Id"));

                    b.Property<int>("Capa_Id1")
                        .HasColumnType("int");

                    b.Property<int>("Capa_Id2")
                        .HasColumnType("int");

                    b.Property<int>("Capa_Id3")
                        .HasColumnType("int");

                    b.Property<double>("LamCapa_Calibre1")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Calibre2")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Calibre3")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Cantidad1")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Cantidad2")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<double>("LamCapa_Cantidad3")
                        .HasPrecision(14, 2)
                        .HasColumnType("float(14)");

                    b.Property<long>("OT_Id")
                        .HasColumnType("bigint");

                    b.HasKey("LamCapa_Id");

                    b.HasIndex("Capa_Id1");

                    b.HasIndex("Capa_Id2");

                    b.HasIndex("Capa_Id3");

                    b.HasIndex("OT_Id");

                    b.ToTable("OT_Laminado", t =>
                        {
                            t.HasTrigger("Auditoria_OT_Laminado");

                            t.HasTrigger("TR_ActualizarCampos_OTLaminado");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Sellado_Corte", b =>
                {
                    b.Property<long>("SelladoCorte_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SelladoCorte_Id"));

                    b.Property<bool>("Corte")
                        .HasColumnType("bit");

                    b.Property<int>("Formato_Id")
                        .HasColumnType("int");

                    b.Property<long>("Ot_Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Sellado")
                        .HasColumnType("bit");

                    b.Property<decimal>("SelladoCorte_Ancho")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_CantBolsasBulto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_CantBolsasPaquete")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("SelladoCorte_Etiqueta_Ancho")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SelladoCorte_Etiqueta_Fuelle")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SelladoCorte_Etiqueta_Largo")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("SelladoCorte_Fuelle")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_Largo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PesoBulto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PesoMillar")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PesoPaquete")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PesoProducto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PrecioDia_Wik_Mq50")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PrecioDia_Wik_Mq9")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PrecioNoche_Wik_Mq50")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PrecioNoche_Wik_Mq9")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PrecioSelladoDia")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("SelladoCorte_PrecioSelladoNoche")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("TpSellado_Id")
                        .HasColumnType("int");

                    b.HasKey("SelladoCorte_Id");

                    b.HasIndex("Formato_Id");

                    b.HasIndex("Ot_Id");

                    b.HasIndex("TpSellado_Id");

                    b.ToTable("OT_Sellado_Corte", t =>
                        {
                            t.HasTrigger("Auditoria_OT_Sellado_Corte");

                            t.HasTrigger("TR_ActualizarCampos_ProductoTerminado");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OrdenFacturacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Factura")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("OrdenFacturacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OrdenMaquila_Facturacion", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("FacOM_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OM_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Codigo");

                    b.HasIndex("FacOM_Id");

                    b.HasIndex("OM_Id");

                    b.ToTable("OrdenMaquila_Facturacion", t =>
                        {
                            t.HasTrigger("Auditoria_OrdenMaquila_Facturacion");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Orden_Compra", b =>
                {
                    b.Property<long>("Oc_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oc_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("IVA")
                        .HasColumnType("int");

                    b.Property<DateTime>("Oc_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Oc_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Oc_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Oc_PesoTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Oc_ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ReteFuente")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReteICA")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReteIVA")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Oc_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Ordenes_Compras", t =>
                        {
                            t.HasTrigger("Auditoria_Ordenes_Compras");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Orden_Maquila", b =>
                {
                    b.Property<long>("OM_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OM_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("OM_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("OM_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("OM_Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OM_PesoTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OM_ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tercero_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("OM_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Tercero_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Orden_Maquila", t =>
                        {
                            t.HasTrigger("Auditoria_Orden_Maquila");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Orden_Trabajo", b =>
                {
                    b.Property<long>("Ot_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Ot_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(22);

                    b.Property<bool>("Extrusion")
                        .HasColumnType("bit")
                        .HasColumnOrder(11);

                    b.Property<long>("Id_Vendedor")
                        .HasColumnType("bigint")
                        .HasColumnOrder(23);

                    b.Property<bool>("Impresion")
                        .HasColumnType("bit")
                        .HasColumnOrder(12);

                    b.Property<bool>("Laminado")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<long>("Mezcla_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(18);

                    b.Property<bool>("MotrarEmpresaEtiquetas")
                        .HasColumnType("bit")
                        .HasColumnOrder(26);

                    b.Property<long>("Numero_OT")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Ot_CantidadPedida")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(5);

                    b.Property<bool>("Ot_Corte")
                        .HasColumnType("bit")
                        .HasColumnOrder(15);

                    b.Property<bool>("Ot_Cyrel")
                        .HasColumnType("bit")
                        .HasColumnOrder(17);

                    b.Property<DateTime>("Ot_FechaCreacion")
                        .HasColumnType("Date")
                        .HasColumnOrder(20);

                    b.Property<string>("Ot_Hora")
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(21);

                    b.Property<decimal>("Ot_MargenAdicional")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(9);

                    b.Property<string>("Ot_Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnOrder(25);

                    b.Property<decimal>("Ot_PesoNetoKg")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(8);

                    b.Property<decimal>("Ot_ValorKg")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(6);

                    b.Property<decimal>("Ot_ValorOT")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(10);

                    b.Property<decimal>("Ot_ValorUnidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(7);

                    b.Property<long>("PedExt_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(24);

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<bool>("Rotograbado")
                        .HasColumnType("bit")
                        .HasColumnOrder(13);

                    b.Property<long>("SedeCli_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<bool>("Sellado")
                        .HasColumnType("bit")
                        .HasColumnOrder(16);

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(4);

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(19);

                    b.HasKey("Ot_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Id_Vendedor");

                    b.HasIndex("Mezcla_Id");

                    b.HasIndex("PedExt_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("SedeCli_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Orden_Trabajo", t =>
                        {
                            t.HasTrigger("Auditoria_Orden_Trabajo");

                            t.HasTrigger("TR_CrearOTs");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OrdenesCompras_FacturasCompras", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("Facco_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Oc_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Codigo");

                    b.HasIndex("Facco_Id");

                    b.HasIndex("Oc_Id");

                    b.ToTable("OrdenesCompras_FacturasCompras", t =>
                        {
                            t.HasTrigger("Auditoria_OrdenesCompras_FacturasCompras");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoExterno", b =>
                {
                    b.Property<long>("PedExt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PedExt_Id"));

                    b.Property<long?>("Creador_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("PedExt_Codigo")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PedExt_Descuento")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PedExt_FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PedExt_FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("PedExt_HoraCreacion")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("PedExt_Iva")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PedExt_Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("PedExt_PrecioTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PedExt_PrecioTotalFinal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SedeCli_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Usua_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.HasKey("PedExt_Id");

                    b.HasIndex("Creador_Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("SedeCli_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Pedidos_Externos", t =>
                        {
                            t.HasTrigger("CrearPedidos_Zeus");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoProducto", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<decimal>("PedExtProd_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("PedExtProd_CantidadFacturada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PedExtProd_CantidadFaltante")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PedExtProd_FechaEntrega")
                        .HasColumnType("date");

                    b.Property<decimal?>("PedExtProd_PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PedExt_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Codigo");

                    b.HasIndex("PedExt_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("PedidosExternos_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Pedido_Mantenimiento", b =>
                {
                    b.Property<long>("PedMtto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PedMtto_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PedMtto_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("PedMtto_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PedMtto_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("PedMtto_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Pedidos_Mantenimientos", t =>
                        {
                            t.HasTrigger("Auditoria_Pedidos_Mantenimientos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Pigmento", b =>
                {
                    b.Property<int>("Pigmt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pigmt_Id"));

                    b.Property<string>("Pigmt_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Pigmt_Hexadecimal")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pigmt_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Pigmt_Id");

                    b.ToTable("Pigmentos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Pistas", b =>
                {
                    b.Property<int>("Pista_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pista_Id"));

                    b.Property<string>("Pista_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Pista_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Pista_Id");

                    b.ToTable("Pistas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PreEntrega_RolloDespacho", b =>
                {
                    b.Property<long>("PreEntRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PreEntRollo_Id"));

                    b.Property<DateTime>("PreEntRollo_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("PreEntRollo_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PreEntRollo_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("PreEntRollo_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("PreEntrega_RollosDespacho");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Proceso", b =>
                {
                    b.Property<string>("Proceso_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Proceso_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Proceso_Codigo"));

                    b.Property<string>("Proceso_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Proceso_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Proceso_Id");

                    b.ToTable("Procesos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Produccion_Areas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio_Produccion")
                        .HasColumnType("int");

                    b.Property<decimal>("Meta_Abril")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Agosto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Diciembre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Enero")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Febrero")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Julio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Junio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Marzo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Mayo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Noviembre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Octubre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meta_Septiembre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Producido_Abril")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Agosto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Diciembre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Enero")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Febrero")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Julio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Junio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Marzo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Mayo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Noviembre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_OCtubre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Producido_Septiembre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Proceso_Id");

                    b.ToTable("Produccion_Areas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Produccion_Procesos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Ancho_Cono")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Cono_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Creador_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Datos_Etiqueta")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Desviacion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Envio_Zeus")
                        .HasColumnType("bit");

                    b.Property<int>("Estado_Rollo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Maquina")
                        .HasColumnType("int");

                    b.Property<long>("Numero_Rollo")
                        .HasColumnType("bigint");

                    b.Property<long>("OT")
                        .HasColumnType("bigint");

                    b.Property<long?>("Operario1_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Operario2_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Operario3_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Operario4_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Pesado_Entre")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso_Bruto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Peso_Neto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Peso_Teorico")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVenta_Producto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Tara_Cono")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Cli_Id");

                    b.HasIndex("Cono_Id");

                    b.HasIndex("Creador_Id");

                    b.HasIndex("Estado_Rollo");

                    b.HasIndex("Operario1_Id");

                    b.HasIndex("Operario2_Id");

                    b.HasIndex("Operario3_Id");

                    b.HasIndex("Operario4_Id");

                    b.HasIndex("Presentacion");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Turno_Id");

                    b.ToTable("Produccion_Procesos", t =>
                        {
                            t.HasTrigger("TR_EnviarRollosBagpro");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Producto", b =>
                {
                    b.Property<int>("Prod_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Estado_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(14);

                    b.Property<int?>("Material_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(16);

                    b.Property<int?>("Pigmt_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(15);

                    b.Property<decimal?>("Prod_Ancho")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(9);

                    b.Property<decimal?>("Prod_Calibre")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(11);

                    b.Property<int?>("Prod_CantBolsasBulto")
                        .HasPrecision(14, 2)
                        .HasColumnType("int");

                    b.Property<int?>("Prod_CantBolsasPaquete")
                        .HasPrecision(14, 2)
                        .HasColumnType("int");

                    b.Property<int>("Prod_Cod")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prod_Cod"));

                    b.Property<string>("Prod_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("Prod_Fecha")
                        .HasColumnType("Date");

                    b.Property<decimal?>("Prod_Fuelle")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(8);

                    b.Property<string>("Prod_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("Prod_Largo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(10);

                    b.Property<string>("Prod_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Prod_Peso")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(6);

                    b.Property<decimal>("Prod_Peso_Bulto")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_Peso_Millar")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnOrder(5);

                    b.Property<decimal>("Prod_Peso_Paquete")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_PrecioDia_Sellado")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Prod_PrecioNoche_Sellado")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("TpProd_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int?>("TpSellado_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMedACF")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(12);

                    b.Property<string>("UndMedPeso")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(7);

                    b.HasKey("Prod_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("Pigmt_Id");

                    b.HasIndex("TpProd_Id");

                    b.HasIndex("TpSellado_Id");

                    b.HasIndex("UndMedACF");

                    b.HasIndex("UndMedPeso");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Productos_MateriasPrimas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Cantidad_Minima")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("ExProd_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("date");

                    b.Property<string>("Hora_Registro")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Bopp_Id");

                    b.HasIndex("ExProd_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Productos_MateriasPrimas", t =>
                        {
                            t.HasTrigger("Auditoria_Productos_MateriasPrimas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Provedor_MateriaPrima", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Codigo");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Prov_Id");

                    b.ToTable("Proveedores_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Proveedor", b =>
                {
                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Prov_Ciudad")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Prov_Codigo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Prov_Codigo"));

                    b.Property<string>("Prov_Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime?>("Prov_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Prov_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Prov_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Prov_Telefono")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ReteFuente")
                        .HasColumnType("int");

                    b.Property<int>("ReteICA")
                        .HasColumnType("int");

                    b.Property<int>("ReteIVA")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TpProv_Id")
                        .HasColumnType("int");

                    b.HasKey("Prov_Id");

                    b.HasIndex("ReteFuente");

                    b.HasIndex("ReteICA");

                    b.HasIndex("ReteIVA");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("TpProv_Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Recuperado_MatPrima", b =>
                {
                    b.Property<long>("RecMp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecMp_Id"));

                    b.Property<string>("Proc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("RecMp_FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateTime>("RecMp_FechaIngreso")
                        .HasColumnType("date");

                    b.Property<string>("RecMp_HoraIngreso")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("RecMp_Maquina")
                        .HasColumnType("int");

                    b.Property<string>("RecMp_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Operador")
                        .HasColumnType("bigint");

                    b.HasKey("RecMp_Id");

                    b.HasIndex("Proc_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("Usua_Id");

                    b.HasIndex("Usua_Operador");

                    b.ToTable("Recuperados_MatPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision", b =>
                {
                    b.Property<int>("Rem_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rem_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<long>("Prov_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Rem_Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Rem_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Rem_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rem_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Rem_PrecioEstimado")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TpDoc_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Rem_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Prov_Id");

                    b.HasIndex("TpDoc_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Remisiones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_FacturaCompra", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("Facco_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Rem_Id")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("Facco_Id");

                    b.HasIndex("Rem_Id");

                    b.ToTable("Remisiones_FacturasCompras");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_MateriaPrima", b =>
                {
                    b.Property<long>("RemiMatPri_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RemiMatPri_Codigo"));

                    b.Property<long>("Bopp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Rem_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("RemiMatPri_Cantidad")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal?>("RemiMatPri_ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("RemiMatPri_Codigo");

                    b.HasIndex("Bopp_Id");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Rem_Id");

                    b.HasIndex("Tinta_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Remisiones_MateriasPrimas", t =>
                        {
                            t.HasTrigger("Movimientos_Entradas_MP_Remision");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_OrdenCompra", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("Oc_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Rem_Id")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("Oc_Id");

                    b.HasIndex("Rem_Id");

                    b.ToTable("Remision_OrdenCompra", t =>
                        {
                            t.HasTrigger("Auditoria_Remision_OrdenCompra");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Rodillos", b =>
                {
                    b.Property<int>("Rodillo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rodillo_Id"));

                    b.Property<string>("Rodillo_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Rodillo_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Rodillo_Id");

                    b.ToTable("Rodillos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Rol_Usuario", b =>
                {
                    b.Property<int>("RolUsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolUsu_Id"));

                    b.Property<string>("RolUsu_Descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RolUsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolUsu_Id");

                    b.ToTable("Roles_Usuarios", t =>
                        {
                            t.HasTrigger("Auditoria_Roles_Usuarios");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Rollo_Desecho", b =>
                {
                    b.Property<long>("Rollo_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Rollo_Codigo"));

                    b.Property<string>("Cono_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("Material_Id")
                        .HasColumnType("int");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Prod_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Rollo_Ancho")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rollo_Calibre")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rollo_Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime?>("Rollo_FechaEliminacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("Rollo_FechaIngreso")
                        .HasColumnType("date");

                    b.Property<decimal>("Rollo_Fuelle")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rollo_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rollo_HoraEliminacion")
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Rollo_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Rollo_Largo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rollo_Maquina")
                        .HasColumnType("int");

                    b.Property<long>("Rollo_OT")
                        .HasColumnType("bigint");

                    b.Property<string>("Rollo_Operario")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("Rollo_PesoBruto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rollo_PesoNeto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rollo_Tara")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rollo_TotalPedidoOT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Turno_Id")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Rollo_Codigo");

                    b.HasIndex("Cono_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Material_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Prod_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Rollos_Desechos", t =>
                        {
                            t.HasTrigger("Auditoria_Rollos_Desechos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.SedesClientes", b =>
                {
                    b.Property<long>("SedeCli_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Cli_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SedeCli_CodBagPro")
                        .HasColumnType("varchar(30)");

                    b.Property<long?>("SedeCli_CodPostal")
                        .HasColumnType("bigint");

                    b.Property<int>("SedeCli_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedeCli_Codigo"));

                    b.Property<DateTime?>("SedeCli_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("SedeCli_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SedeCliente_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SedeCliente_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("SedeCli_Id");

                    b.HasIndex("Cli_Id");

                    b.ToTable("Sedes_Clientes");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Solicitud_MatPrimaExtrusion", b =>
                {
                    b.Property<long>("SolMpExt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SolMpExt_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Proceso_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("SolMpExt_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("SolMpExt_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("SolMpExt_Maquina")
                        .HasColumnType("int");

                    b.Property<long>("SolMpExt_OT")
                        .HasColumnType("bigint");

                    b.Property<string>("SolMpExt_Observacion")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("SolMpExt_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Proceso_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Solicitud_MatPrimaExtrusion", t =>
                        {
                            t.HasTrigger("Auditoria_Solicitud_MatPrimaExtrusion");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Solicitud_MateriaPrima", b =>
                {
                    b.Property<long>("Solicitud_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Solicitud_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Solicitud_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Solicitud_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Solicitud_Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Solicitud_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Solicitud_MateriaPrima", t =>
                        {
                            t.HasTrigger("Auditoria_Solicitud_MateriaPrima");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Solicitud_Rollos_Areas", b =>
                {
                    b.Property<long>("SolRollo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SolRollo_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SolRollo_FechaRespuesta")
                        .HasColumnType("date");

                    b.Property<DateTime>("SolRollo_FechaSolicitud")
                        .HasColumnType("date");

                    b.Property<string>("SolRollo_HoraRespuesta")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SolRollo_HoraSolicitud")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SolRollo_Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TpSol_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Respuesta")
                        .HasColumnType("bigint");

                    b.HasKey("SolRollo_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("TpSol_Id");

                    b.HasIndex("Usua_Id");

                    b.HasIndex("Usua_Respuesta");

                    b.ToTable("Solicitud_Rollos_Areas", t =>
                        {
                            t.HasTrigger("Auditoria_Solicitud_Rollos_Areas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.SolicitudesMP_OrdenesCompra", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("Oc_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Solicitud_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Codigo");

                    b.HasIndex("Oc_Id");

                    b.HasIndex("Solicitud_Id");

                    b.ToTable("SolicitudesMP_OrdenesCompra", t =>
                        {
                            t.HasTrigger("Auditoria_SolicitudesMP_OrdenesCompra");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Terceros", b =>
                {
                    b.Property<string>("Tercero_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tercero_Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tercero_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Tercero_Codigo"));

                    b.Property<string>("Tercero_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tercero_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Tercero_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tercero_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tercero_Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Tercero_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("Terceros", t =>
                        {
                            t.HasTrigger("Auditoria_Terceros");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tickets", b =>
                {
                    b.Property<long>("Ticket_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Ticket_Id"));

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Ticket_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("Ticket_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Ticket_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ticket_NombreImagen")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Ticket_RutaImagen")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Ticket_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Tickets", t =>
                        {
                            t.HasTrigger("Auditoria_Tickets");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tickets_Revisados", b =>
                {
                    b.Property<long>("TicketRev_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TicketRev_Id"));

                    b.Property<string>("TicketRev_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("TicketRev_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("TicketRev_Hora")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("Ticket_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.HasKey("TicketRev_Id");

                    b.HasIndex("Ticket_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("Tickets_Revisados", t =>
                        {
                            t.HasTrigger("Auditoria_Tickets_Revisados");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tinta", b =>
                {
                    b.Property<long>("Tinta_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Tinta_Id"));

                    b.Property<int>("CatMP_Id")
                        .HasColumnType("int");

                    b.Property<string>("Tinta_CodigoHexadecimal")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tinta_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime?>("Tinta_FechaIngreso")
                        .HasColumnType("Date");

                    b.Property<string>("Tinta_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Tinta_InvInicial")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Tinta_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("Tinta_Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tinta_PrecioEstandar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tinta_Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TpBod_Id")
                        .HasColumnType("int");

                    b.Property<string>("UndMed_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Tinta_Id");

                    b.HasIndex("CatMP_Id");

                    b.HasIndex("TpBod_Id");

                    b.HasIndex("UndMed_Id");

                    b.ToTable("Tintas", t =>
                        {
                            t.HasTrigger("Auditoria_Tintas");

                            t.HasTrigger("CrearTintas_DesdePBDD");

                            t.HasTrigger("Insert_Prod_Tintas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tinta_MateriaPrima", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("MatPri_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Tinta_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Codigo");

                    b.HasIndex("MatPri_Id");

                    b.HasIndex("Tinta_Id");

                    b.ToTable("Tintas_MateriasPrimas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.TipoDevolucion_ProductoFacturado", b =>
                {
                    b.Property<int>("TipoDevProdFact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDevProdFact_Id"));

                    b.Property<string>("TipoDevProdFact_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TipoDevProdFact_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoDevProdFact_Id");

                    b.ToTable("TiposDevoluciones_ProductosFacturados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.TipoIdentificacion", b =>
                {
                    b.Property<string>("TipoIdentificacion_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoIdentificacion_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoIdentificacion_Codigo"));

                    b.Property<string>("TipoIdentificacion_Descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TipoIdentificacion_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoIdentificacion_Id");

                    b.ToTable("TipoIdentificaciones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.TipoSalidas_CajaMenor", b =>
                {
                    b.Property<int>("TpSal_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpSal_Id"));

                    b.Property<string>("TpSal_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpSal_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpSal_Id");

                    b.ToTable("TipoSalidas_CajaMenor", t =>
                        {
                            t.HasTrigger("Auditoria_TipoSalidas_CajaMenor");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Activo", b =>
                {
                    b.Property<int>("TpActv_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpActv_Id"));

                    b.Property<string>("TpActv_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpActv_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpActv_Id");

                    b.ToTable("Tipos_Activos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Bodega", b =>
                {
                    b.Property<int>("TpBod_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpBod_Id"));

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TpBod_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpBod_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpBod_Id");

                    b.HasIndex("Area_Id");

                    b.ToTable("Tipos_Bodegas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Documento", b =>
                {
                    b.Property<string>("TpDoc_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpDoc_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpDoc_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpDoc_Id");

                    b.ToTable("Tipos_Documentos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Estado", b =>
                {
                    b.Property<int>("TpEstado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpEstado_Id"));

                    b.Property<string>("TpEstado_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpEstado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpEstado_Id");

                    b.ToTable("Tipos_Estados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_FallaTecnica", b =>
                {
                    b.Property<int>("TipoFalla_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoFalla_Id"));

                    b.Property<string>("TipoFalla_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TipoFalla_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoFalla_Id");

                    b.ToTable("Tipos_FallasTecnicas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Mantenimiento", b =>
                {
                    b.Property<int>("TpMtto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpMtto_Id"));

                    b.Property<string>("TpMtto_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpMtto_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpMtto_Id");

                    b.ToTable("Tipos_Mantenimientos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Moneda", b =>
                {
                    b.Property<string>("TpMoneda_Id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TpMoneda_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpMoneda_Codigo"));

                    b.Property<string>("TpMoneda_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TpMoneda_Id");

                    b.ToTable("Tipos_Monedas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Producto", b =>
                {
                    b.Property<int>("TpProd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpProd_Id"));

                    b.Property<string>("TpProd_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpProd_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpProd_Id");

                    b.ToTable("Tipos_Productos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Proveedor", b =>
                {
                    b.Property<int>("TpProv_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpProv_Id"));

                    b.Property<string>("TpProv_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TpProv_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("TpProv_Id");

                    b.ToTable("Tipos_Proveedores");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Recuperado", b =>
                {
                    b.Property<string>("TpRecu_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TpRecu_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpRecu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpRecu_Id");

                    b.ToTable("Tipos_Recuperados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Solicitud_Rollos_Areas", b =>
                {
                    b.Property<int>("TpSol_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpSol_Id"));

                    b.Property<string>("TpSol_Descricion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TpSol_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TpSol_Id");

                    b.ToTable("Tipo_Solicitud_Rollos_Areas", t =>
                        {
                            t.HasTrigger("Auditoria_Tipo_Solicitud_Rollos_Areas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Usuario", b =>
                {
                    b.Property<int>("tpUsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tpUsu_Id"));

                    b.Property<string>("tpUsu_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("tpUsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("tpUsu_Id");

                    b.ToTable("Tipos_Usuarios", t =>
                        {
                            t.HasTrigger("Auditoria_Tipos_Usuarios");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.TiposClientes", b =>
                {
                    b.Property<int>("TPCli_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TPCli_Id"));

                    b.Property<string>("TPCli_Descripcion")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TPCli_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TPCli_Id");

                    b.ToTable("Tipos_Clientes");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipos_Conceptos", b =>
                {
                    b.Property<int>("TpCcpto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpCcpto_Id"));

                    b.Property<string>("TpCcpto_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TpCcpto_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpCcpto_Id");

                    b.ToTable("Tipos_Conceptos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipos_Impresion", b =>
                {
                    b.Property<int>("TpImpresion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpImpresion_Id"));

                    b.Property<string>("TpImpresion_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tp_Impresion_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("TpImpresion_Id");

                    b.ToTable("Tipos_Impresion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipos_Nomina", b =>
                {
                    b.Property<int>("TpNomina_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpNomina_Id"));

                    b.Property<string>("TpNomina_Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TpNomina_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TpNomina_Id");

                    b.ToTable("Tipos_Nomina", t =>
                        {
                            t.HasTrigger("Auditoria_Tipos_Nomina");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipos_Sellados", b =>
                {
                    b.Property<int>("TpSellado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpSellado_Id"));

                    b.Property<string>("TpSellado_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TpSellados_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpSellado_Id");

                    b.ToTable("Tipos_Sellados");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tratado", b =>
                {
                    b.Property<int>("Tratado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tratado_Id"));

                    b.Property<string>("Tratado_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Tratado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Tratado_Id");

                    b.ToTable("Tratado");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Turno", b =>
                {
                    b.Property<string>("Turno_Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Turno_Descripcion")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Turno_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Turno_Id");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Unidad_Medida", b =>
                {
                    b.Property<string>("UndMed_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UndMed_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UndMed_Codigo"));

                    b.Property<string>("UndMed_Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UndMed_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("UndMed_Id");

                    b.ToTable("Unidades_Medidas");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Area_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Empresa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<int>("RolUsu_Id")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Usua_Codigo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Usua_Codigo"));

                    b.Property<string>("Usua_Contrasena")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usua_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Usua_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Usua_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Usua_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usua_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("cajComp_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("eps_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("fPen_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("tpUsu_Id")
                        .HasColumnType("int");

                    b.HasKey("Usua_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("RolUsu_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.HasIndex("cajComp_Id");

                    b.HasIndex("eps_Id");

                    b.HasIndex("fPen_Id");

                    b.HasIndex("tpUsu_Id");

                    b.ToTable("Usuarios", t =>
                        {
                            t.HasTrigger("Auditoria_Usuarios");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.VistasFavoritas", b =>
                {
                    b.Property<int>("VistasFav_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VistasFav_Id"));

                    b.Property<long>("Usua_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("VistaFav_Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("VistaFav_Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VistaFav_Num1")
                        .HasColumnType("int");

                    b.Property<int>("VistaFav_Num2")
                        .HasColumnType("int");

                    b.Property<int>("VistaFav_Num3")
                        .HasColumnType("int");

                    b.Property<int>("VistaFav_Num4")
                        .HasColumnType("int");

                    b.Property<int>("VistaFav_Num5")
                        .HasColumnType("int");

                    b.HasKey("VistasFav_Id");

                    b.HasIndex("Usua_Id");

                    b.ToTable("VistasFavoritas", t =>
                        {
                            t.HasTrigger("Auditoria_VistasFavoritas");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Vistas_Permisos", b =>
                {
                    b.Property<int>("Vp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vp_Id"));

                    b.Property<string>("Vp_Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vp_Estado")
                        .HasColumnType("int");

                    b.Property<string>("Vp_Icono_Dock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vp_Icono_Menu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vp_Id_Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vp_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vp_Ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vp_Id");

                    b.HasIndex("Vp_Estado");

                    b.ToTable("Vistas_Permisos", t =>
                        {
                            t.HasTrigger("Auditoria_Vistas_Permisos");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Web_ContactoCorreo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Envio")
                        .HasColumnType("Date");

                    b.Property<string>("Hora_Envio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Web_ContactoCorreo");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.cajaCompensacion", b =>
                {
                    b.Property<long>("cajComp_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("cajComp_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("cajComp_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("cajComp_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cajComp_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cajComp_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("cajComp_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("cajComp_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("Cajas_Compensaciones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.fondoPension", b =>
                {
                    b.Property<long>("fPen_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("fPen_Ciudad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("fPen_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPen_Codigo"));

                    b.Property<long>("fPen_CuentaBancaria")
                        .HasColumnType("bigint");

                    b.Property<string>("fPen_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fPen_Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("fPen_Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("fPen_Hora")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("fPen_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fPen_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("fPen_Id");

                    b.HasIndex("TipoIdentificacion_Id");

                    b.ToTable("FondosPensiones");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Activo", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estados")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Activo", "Tp_Activo")
                        .WithMany()
                        .HasForeignKey("TpActv_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Estados");

                    b.Navigation("Tp_Activo");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Archivos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Categorias_Archivos", "Categoria")
                        .WithMany()
                        .HasForeignKey("Categoria_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.AsignacionProducto_FacturaVenta", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Conductor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usua");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.AsignacionRollos_Extrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_BOPP", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "EstadoOT")
                        .WithMany()
                        .HasForeignKey("Estado_OrdenTrabajo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Solicitud_MatPrimaExtrusion", "SolMatPrima_Extrusion")
                        .WithMany()
                        .HasForeignKey("SolMpExt_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("EstadoOT");

                    b.Navigation("SolMatPrima_Extrusion");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_MatPrimaXTinta", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.BOPP", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "boppGenerico")
                        .WithMany()
                        .HasForeignKey("BoppGen_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Categoria_MatPrima", "CatMP")
                        .WithMany()
                        .HasForeignKey("CatMP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed2")
                        .WithMany()
                        .HasForeignKey("UndMed_Kg")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CatMP");

                    b.Navigation("TpBod");

                    b.Navigation("UndMed");

                    b.Navigation("UndMed2");

                    b.Navigation("Usua");

                    b.Navigation("boppGenerico");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.CajaMenor_Plasticaribe", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Area", "Areas")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.TipoSalidas_CajaMenor", "TpSalida")
                        .WithMany()
                        .HasForeignKey("TpSal_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Areas");

                    b.Navigation("TpSalida");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Certificados_Calidad", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Item")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und")
                        .WithMany()
                        .HasForeignKey("Presentacion_Producto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und_AnchoFrente")
                        .WithMany()
                        .HasForeignKey("Unidad_AnchoFrente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und_AnchoFuelle")
                        .WithMany()
                        .HasForeignKey("Unidad_AnchoFuelle")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und_Calibre")
                        .WithMany()
                        .HasForeignKey("Unidad_Calibre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und_Cof")
                        .WithMany()
                        .HasForeignKey("Unidad_Cof")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und_LargoRepeticion")
                        .WithMany()
                        .HasForeignKey("Unidad_LargoRepeticion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Und");

                    b.Navigation("Und_AnchoFrente");

                    b.Navigation("Und_AnchoFuelle");

                    b.Navigation("Und_Calibre");

                    b.Navigation("Und_Cof");

                    b.Navigation("Und_LargoRepeticion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Cliente_Producto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Cli")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cli");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Clientes", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.TiposClientes", "TPCli")
                        .WithMany()
                        .HasForeignKey("TPCli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("TPCli");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Conceptos_Automaticos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Tipos_Conceptos", "TipoCpto")
                        .WithMany()
                        .HasForeignKey("TpCcpto_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoCpto");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_CorteDoblado", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Turno");

                    b.Navigation("Und");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_Extrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Pigmento", "Pigmento")
                        .WithMany()
                        .HasForeignKey("Pigmento_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Turno", "Turnos")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usu")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pigmento");

                    b.Navigation("Producto");

                    b.Navigation("Turnos");

                    b.Navigation("UndMedida");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_Impresion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Turno");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.ControlCalidad_Sellado", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Turno", "Turnos")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida2")
                        .WithMany()
                        .HasForeignKey("UndMed_AF")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida1")
                        .WithMany()
                        .HasForeignKey("UndMed_AL")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usu")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Turnos");

                    b.Navigation("UndMedida1");

                    b.Navigation("UndMedida2");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Desperdicio", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Falla_Tecnica", "Falla")
                        .WithMany()
                        .HasForeignKey("Falla_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Material_MatPrima", "Material")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Turno", "Turnos")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario2")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario1")
                        .WithMany()
                        .HasForeignKey("Usua_Operario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Falla");

                    b.Navigation("Material");

                    b.Navigation("Proceso");

                    b.Navigation("Producto");

                    b.Navigation("Turnos");

                    b.Navigation("Usuario1");

                    b.Navigation("Usuario2");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetSolicitud_MatPrimaExtrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPrima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Solicitud_MatPrimaExtrusion", "SolMatPriExt")
                        .WithMany()
                        .HasForeignKey("SolMpExt_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPrima");

                    b.Navigation("SolMatPriExt");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_BOPP", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Asignacion_BOPP", "AsigBOPP")
                        .WithMany("DetAsigBOPP")
                        .HasForeignKey("AsigBOPP_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.BOPP", "BOPP")
                        .WithMany("DetAsigBOPP")
                        .HasForeignKey("BOPP_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "EstadoOT")
                        .WithMany()
                        .HasForeignKey("Estado_OrdenTrabajo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "Tipo_Documento")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigBOPP");

                    b.Navigation("BOPP");

                    b.Navigation("EstadoOT");

                    b.Navigation("Proceso");

                    b.Navigation("Tipo_Documento");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_MatPrimaXTinta", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Asignacion_MatPrimaXTinta", "AsigMPxTinta")
                        .WithMany()
                        .HasForeignKey("AsigMPxTinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "TintasDAMPxT")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigMPxTinta");

                    b.Navigation("MatPri");

                    b.Navigation("Proceso");

                    b.Navigation("TintasDAMPxT");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Asignacion_MatPrima", "AsigMp")
                        .WithMany()
                        .HasForeignKey("AsigMp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigMp");

                    b.Navigation("MatPri");

                    b.Navigation("Proceso");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleAsignacion_Tinta", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Asignacion_MatPrima", "AsigMp")
                        .WithMany()
                        .HasForeignKey("AsigMp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigMp");

                    b.Navigation("Proceso");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleDevolucion_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.BOPP", "Bopp")
                        .WithMany()
                        .HasForeignKey("BOPP_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Devolucion_MatPrima", "DevMatPri")
                        .WithMany()
                        .HasForeignKey("DevMatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bopp");

                    b.Navigation("DevMatPri");

                    b.Navigation("MatPri");

                    b.Navigation("Proceso");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleDevolucion_ProductoFacturado", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Devolucion_ProductoFacturado", "DevolucionProdFact")
                        .WithMany("DtDevProd_Fact")
                        .HasForeignKey("DevProdFact_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany("DtDevProd_Fact")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DevolucionProdFact");

                    b.Navigation("Prod");

                    b.Navigation("UndMedida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleEntradaRollo_Producto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.EntradaRollo_Producto", "EntRollo_Producto")
                        .WithMany()
                        .HasForeignKey("EntRolloProd_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida_Prod")
                        .WithMany()
                        .HasForeignKey("UndMed_Prod")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida_Rollo")
                        .WithMany()
                        .HasForeignKey("UndMed_Rollo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntRollo_Producto");

                    b.Navigation("Estado");

                    b.Navigation("Proceso");

                    b.Navigation("Prod");

                    b.Navigation("UndMedida_Prod");

                    b.Navigation("UndMedida_Rollo");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleFacturacion_OrdenMaquila", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.BOPP", "BOPP")
                        .WithMany()
                        .HasForeignKey("Bopp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Facturacion_OrdenMaquila", "FacOM")
                        .WithMany()
                        .HasForeignKey("FacOM_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPrima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BOPP");

                    b.Navigation("FacOM");

                    b.Navigation("MatPrima");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallePedido_Mantenimiento", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Activo", "Act")
                        .WithMany()
                        .HasForeignKey("Actv_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Pedido_Mantenimiento", "PedidoMtto")
                        .WithMany()
                        .HasForeignKey("PedMtto_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Mantenimiento", "Tipo_Mtto")
                        .WithMany()
                        .HasForeignKey("TpMtto_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Act");

                    b.Navigation("PedidoMtto");

                    b.Navigation("Tipo_Mtto");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallePreEntrega_RolloDespacho", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.PreEntrega_RolloDespacho", "PreEntregaRollo")
                        .WithMany()
                        .HasForeignKey("PreEntRollo_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedidaProducto")
                        .WithMany()
                        .HasForeignKey("UndMed_Producto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedidaRollo")
                        .WithMany()
                        .HasForeignKey("UndMed_Rollo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PreEntregaRollo");

                    b.Navigation("Proceso");

                    b.Navigation("Prod");

                    b.Navigation("UndMedidaProducto");

                    b.Navigation("UndMedidaRollo");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetalleRecuperado_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Recuperado_MatPrima", "RecMp")
                        .WithMany()
                        .HasForeignKey("RecMp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Recuperado", "TpRecu")
                        .WithMany()
                        .HasForeignKey("TpRecu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("RecMp");

                    b.Navigation("TpRecu");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalle_Mantenimiento", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Activo", "Act")
                        .WithMany()
                        .HasForeignKey("Actv_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estados")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mantenimiento", "Mttos")
                        .WithMany()
                        .HasForeignKey("Mtto_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Mantenimiento", "Tipo_Mtto")
                        .WithMany()
                        .HasForeignKey("TpMtto_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Act");

                    b.Navigation("Estados");

                    b.Navigation("Mttos");

                    b.Navigation("Tipo_Mtto");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalle_OrdenCompra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "BOPP")
                        .WithMany()
                        .HasForeignKey("BOPP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPrima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Orden_Compra", "Orden_Compra")
                        .WithMany()
                        .HasForeignKey("Oc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BOPP");

                    b.Navigation("MatPrima");

                    b.Navigation("Orden_Compra");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalle_OrdenMaquila", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.BOPP", "BOPP")
                        .WithMany()
                        .HasForeignKey("BOPP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPrima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Orden_Maquila", "Orden_Maquila")
                        .WithMany()
                        .HasForeignKey("OM_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BOPP");

                    b.Navigation("MatPrima");

                    b.Navigation("Orden_Maquila");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallesAsgRollos_Extrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.AsignacionRollos_Extrusion", "AsignacionRollos")
                        .WithMany()
                        .HasForeignKey("AsgRollos_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsignacionRollos");

                    b.Navigation("Proceso");

                    b.Navigation("Producto");

                    b.Navigation("Unidad_Medida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallesAsignacionProducto_FacturaVenta", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.AsignacionProducto_FacturaVenta", "AsigProducto_FV")
                        .WithMany("DtAsigProd_FVTA")
                        .HasForeignKey("AsigProdFV_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany("DtAsigProd_FVTA")
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsigProducto_FV");

                    b.Navigation("Prod");

                    b.Navigation("UndMedida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.DetallesIngRollos_Extrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.IngresoRollos_Extrusion", "IngresoRollos_Extrusion")
                        .WithMany()
                        .HasForeignKey("IngRollo_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("IngresoRollos_Extrusion");

                    b.Navigation("Proceso");

                    b.Navigation("Producto");

                    b.Navigation("Unidad_Medida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_BodegasRollos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Bodega_Actual")
                        .WithMany()
                        .HasForeignKey("BgRollo_BodegaActual")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Bodegas_Rollos", "Bodegas_Rollos")
                        .WithMany()
                        .HasForeignKey("BgRollo_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bodega_Actual");

                    b.Navigation("Bodegas_Rollos");

                    b.Navigation("Producto");

                    b.Navigation("Und");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_EntradaTintas", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Entrada_Tintas", "Entrada_Tinta")
                        .WithMany()
                        .HasForeignKey("EntTinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tintas")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entrada_Tinta");

                    b.Navigation("Tintas");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_OrdenFacturacion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.OrdenFacturacion", "OrdenFacturacion")
                        .WithMany()
                        .HasForeignKey("Id_OrdenFacturacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und")
                        .WithMany()
                        .HasForeignKey("Presentacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdenFacturacion");

                    b.Navigation("Producto");

                    b.Navigation("Und");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_SolicitudMateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "Bopp")
                        .WithMany()
                        .HasForeignKey("Bopp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "Materia_Prima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Solicitud_MateriaPrima", "Solicitud_MateriaPrima")
                        .WithMany()
                        .HasForeignKey("Solicitud_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bopp");

                    b.Navigation("Estado");

                    b.Navigation("Materia_Prima");

                    b.Navigation("Solicitud_MateriaPrima");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Detalles_SolicitudRollos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Bodega_Solicitada")
                        .WithMany()
                        .HasForeignKey("DtSolRollo_BodegaSolicitada")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Bodega_Solicitante")
                        .WithMany()
                        .HasForeignKey("DtSolRollo_BodegaSolicitante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Solicitud_Rollos_Areas", "SolicitudRollos")
                        .WithMany()
                        .HasForeignKey("SolRollo_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bodega_Solicitada");

                    b.Navigation("Bodega_Solicitante");

                    b.Navigation("Producto");

                    b.Navigation("SolicitudRollos");

                    b.Navigation("Und");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Devolucion_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Devolucion_ProductoFacturado", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.TipoDevolucion_ProductoFacturado", "TipoDevolucionPF")
                        .WithMany()
                        .HasForeignKey("TipoDevProdFact_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoDevolucionPF");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EPS", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Empresa", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EntradaRollo_Producto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Entrada_Tintas", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Entradas_Salidas_MP", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "Bopp")
                        .WithMany()
                        .HasForeignKey("Bopp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Movimientros_Entradas_MP", "Movimientros")
                        .WithMany()
                        .HasForeignKey("Id_Entrada")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "Materia_Prima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "Tipo_Documento")
                        .WithMany()
                        .HasForeignKey("Tipo_Entrada")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("Tipo_Salida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bopp");

                    b.Navigation("Documento");

                    b.Navigation("Materia_Prima");

                    b.Navigation("Movimientros");

                    b.Navigation("Producto");

                    b.Navigation("Tinta");

                    b.Navigation("Tipo_Documento");

                    b.Navigation("UndMedida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Estado", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Tipo_Estado", null)
                        .WithMany()
                        .HasForeignKey("TpEstado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Estados_ProcesosOT", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado_OT")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Falla_Tecnica", "FallaTecnica")
                        .WithMany()
                        .HasForeignKey("Falla_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Clientes");

                    b.Navigation("Estado_OT");

                    b.Navigation("FallaTecnica");

                    b.Navigation("Producto");

                    b.Navigation("UnidadMedida");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.EventosCalendario", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Existencia_Productos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Moneda", "TpMoneda")
                        .WithMany()
                        .HasForeignKey("TpMoneda_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prod");

                    b.Navigation("TpBod");

                    b.Navigation("TpMoneda");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.FacturaCompra_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "Bopp_Generico")
                        .WithMany()
                        .HasForeignKey("Bopp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Factura_Compra", "Facco")
                        .WithMany()
                        .HasForeignKey("Facco_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bopp_Generico");

                    b.Navigation("Facco");

                    b.Navigation("MatPri");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Factura_Compra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Prov")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "TpDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Prov");

                    b.Navigation("TpDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Facturacion_OrdenMaquila", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Terceros", "Tercero")
                        .WithMany()
                        .HasForeignKey("Tercero_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "TipoDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Tercero");

                    b.Navigation("TipoDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Facturas_Invergoal_Inversuez", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estados")
                        .WithMany()
                        .HasForeignKey("Estado_Factura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Nit_Proveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estados");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Falla_Tecnica", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Tipo_FallaTecnica", "TipoFallaTecnica")
                        .WithMany()
                        .HasForeignKey("TipoFalla_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoFallaTecnica");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.IngresoRollos_Extrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Insumo", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Categoria_Insumo", null)
                        .WithMany()
                        .HasForeignKey("CatInsu_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", null)
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.InventarioInicialXDia_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Inventario_Areas", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPrima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Item")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("MatPrima");

                    b.Navigation("Proceso");

                    b.Navigation("UndMedida");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Inventario_Mensual_Productos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Und")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Und");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Log_Transacciones", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Transac_Usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Mantenimiento", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Pedido_Mantenimiento", "Pedido_Mtto")
                        .WithMany()
                        .HasForeignKey("PedMtto_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usu")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Pedido_Mtto");

                    b.Navigation("Proveedor");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Materia_Prima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Categoria_MatPrima", "CatMP")
                        .WithMany()
                        .HasForeignKey("CatMP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CatMP");

                    b.Navigation("TpBod");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Mezcla", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Material_MatPrima", "MaterialMP")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP1C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id1xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP1C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id1xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP1C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id1xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP2C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id2xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP2C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id2xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP2C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id2xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP3C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id3xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP3C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id3xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP3C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id3xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP4C1")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id4xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP4C2")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id4xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Material", "MezMaterial_MP4C3")
                        .WithMany()
                        .HasForeignKey("MezMaterial_Id4xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Pigmento", "MezPigmento1C1")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id1xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Pigmento", "MezPigmento1C2")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id1xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Pigmento", "MezPigmento1C3")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id1xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Pigmento", "MezPigmento2C1")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id2xCapa1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Pigmento", "MezPigmento2C2")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id2xCapa2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla_Pigmento", "MezPigmento2C3")
                        .WithMany()
                        .HasForeignKey("MezPigmto_Id2xCapa3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaterialMP");

                    b.Navigation("MezMaterial_MP1C1");

                    b.Navigation("MezMaterial_MP1C2");

                    b.Navigation("MezMaterial_MP1C3");

                    b.Navigation("MezMaterial_MP2C1");

                    b.Navigation("MezMaterial_MP2C2");

                    b.Navigation("MezMaterial_MP2C3");

                    b.Navigation("MezMaterial_MP3C1");

                    b.Navigation("MezMaterial_MP3C2");

                    b.Navigation("MezMaterial_MP3C3");

                    b.Navigation("MezMaterial_MP4C1");

                    b.Navigation("MezMaterial_MP4C2");

                    b.Navigation("MezMaterial_MP4C3");

                    b.Navigation("MezPigmento1C1");

                    b.Navigation("MezPigmento1C2");

                    b.Navigation("MezPigmento1C3");

                    b.Navigation("MezPigmento2C1");

                    b.Navigation("MezPigmento2C2");

                    b.Navigation("MezPigmento2C3");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.MovimientosAplicacion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Movimientros_Entradas_MP", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "Bopp")
                        .WithMany()
                        .HasForeignKey("Bopp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "Materia_Prima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "Tipo_Documento")
                        .WithMany()
                        .HasForeignKey("Tipo_Entrada")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bopp");

                    b.Navigation("Estado");

                    b.Navigation("Materia_Prima");

                    b.Navigation("Tinta");

                    b.Navigation("Tipo_Documento");

                    b.Navigation("Unidad_Medida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Nomina_Plasticaribe", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Tipos_Nomina", "Tipos_Nomina")
                        .WithMany()
                        .HasForeignKey("TpNomina_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tipos_Nomina");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Extrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Formato", "Formato")
                        .WithMany()
                        .HasForeignKey("Formato_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Material_MatPrima", "Material_MatPrima")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Orden_Trabajo", "Orden_Trabajo")
                        .WithMany()
                        .HasForeignKey("Ot_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Pigmento", "Pigmento")
                        .WithMany()
                        .HasForeignKey("Pigmt_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tratado", "Tratado")
                        .WithMany()
                        .HasForeignKey("Tratado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Formato");

                    b.Navigation("Material_MatPrima");

                    b.Navigation("Orden_Trabajo");

                    b.Navigation("Pigmento");

                    b.Navigation("Tratado");

                    b.Navigation("Unidad_Medida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Impresion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Orden_Trabajo", "Orden_Trabajo")
                        .WithMany()
                        .HasForeignKey("Ot_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta1")
                        .WithMany()
                        .HasForeignKey("Tinta1_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta2")
                        .WithMany()
                        .HasForeignKey("Tinta2_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta3")
                        .WithMany()
                        .HasForeignKey("Tinta3_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta4")
                        .WithMany()
                        .HasForeignKey("Tinta4_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta5")
                        .WithMany()
                        .HasForeignKey("Tinta5_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta6")
                        .WithMany()
                        .HasForeignKey("Tinta6_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta7")
                        .WithMany()
                        .HasForeignKey("Tinta7_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta8")
                        .WithMany()
                        .HasForeignKey("Tinta8_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipos_Impresion", "Tipos_Impresion")
                        .WithMany()
                        .HasForeignKey("TpImpresion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orden_Trabajo");

                    b.Navigation("Tinta1");

                    b.Navigation("Tinta2");

                    b.Navigation("Tinta3");

                    b.Navigation("Tinta4");

                    b.Navigation("Tinta5");

                    b.Navigation("Tinta6");

                    b.Navigation("Tinta7");

                    b.Navigation("Tinta8");

                    b.Navigation("Tipos_Impresion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Laminado", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Laminado_Capa", "Laminado_Capa")
                        .WithMany()
                        .HasForeignKey("Capa_Id1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Laminado_Capa", "Laminado_Capa2")
                        .WithMany()
                        .HasForeignKey("Capa_Id2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Laminado_Capa", "Laminado_Capa3")
                        .WithMany()
                        .HasForeignKey("Capa_Id3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Orden_Trabajo", "Orden_Trabajo")
                        .WithMany()
                        .HasForeignKey("OT_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Laminado_Capa");

                    b.Navigation("Laminado_Capa2");

                    b.Navigation("Laminado_Capa3");

                    b.Navigation("Orden_Trabajo");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OT_Sellado_Corte", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Tipo_Producto", "Formato")
                        .WithMany()
                        .HasForeignKey("Formato_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Orden_Trabajo", "Orden_Trabajo")
                        .WithMany()
                        .HasForeignKey("Ot_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipos_Sellados", "TipoSellado")
                        .WithMany()
                        .HasForeignKey("TpSellado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Formato");

                    b.Navigation("Orden_Trabajo");

                    b.Navigation("TipoSellado");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OrdenFacturacion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OrdenMaquila_Facturacion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Facturacion_OrdenMaquila", "FacOM")
                        .WithMany()
                        .HasForeignKey("FacOM_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Orden_Maquila", "Orden_Maquila")
                        .WithMany()
                        .HasForeignKey("OM_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FacOM");

                    b.Navigation("Orden_Maquila");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Orden_Compra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "TipoDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Proveedor");

                    b.Navigation("TipoDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Orden_Maquila", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Terceros", "Tercero")
                        .WithMany()
                        .HasForeignKey("Tercero_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "TipoDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Tercero");

                    b.Navigation("TipoDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Orden_Trabajo", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Vendedor")
                        .WithMany()
                        .HasForeignKey("Id_Vendedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Mezcla", "Mezcla")
                        .WithMany()
                        .HasForeignKey("Mezcla_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.PedidoExterno", "PedidoExterno")
                        .WithMany()
                        .HasForeignKey("PedExt_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.SedesClientes", "SedeCli")
                        .WithMany()
                        .HasForeignKey("SedeCli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Mezcla");

                    b.Navigation("PedidoExterno");

                    b.Navigation("Prod");

                    b.Navigation("SedeCli");

                    b.Navigation("Unidad_Medida");

                    b.Navigation("Usuario");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.OrdenesCompras_FacturasCompras", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Factura_Compra", "Facco")
                        .WithMany()
                        .HasForeignKey("Facco_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Orden_Compra", "Orden_Compra")
                        .WithMany()
                        .HasForeignKey("Oc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Facco");

                    b.Navigation("Orden_Compra");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoExterno", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("Creador_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.SedesClientes", "SedeCli")
                        .WithMany()
                        .HasForeignKey("SedeCli_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creador");

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("SedeCli");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PedidoProducto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.PedidoExterno", "PedidoExt")
                        .WithMany()
                        .HasForeignKey("PedExt_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Product")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PedidoExt");

                    b.Navigation("Product");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Pedido_Mantenimiento", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.PreEntrega_RolloDespacho", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Produccion_Areas", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proceso");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Produccion_Procesos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Cono", "Cono")
                        .WithMany()
                        .HasForeignKey("Cono_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("Creador_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Rollo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Operario1")
                        .WithMany()
                        .HasForeignKey("Operario1_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Operario2")
                        .WithMany()
                        .HasForeignKey("Operario2_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Operario3")
                        .WithMany()
                        .HasForeignKey("Operario3_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Operario4")
                        .WithMany()
                        .HasForeignKey("Operario4_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("Presentacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Cono");

                    b.Navigation("Creador");

                    b.Navigation("Estado");

                    b.Navigation("Operario1");

                    b.Navigation("Operario2");

                    b.Navigation("Operario3");

                    b.Navigation("Operario4");

                    b.Navigation("Proceso");

                    b.Navigation("Producto");

                    b.Navigation("Turno");

                    b.Navigation("Unidad_Medida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Producto", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Material_MatPrima", "MaterialMP")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Pigmento", "Pigmt")
                        .WithMany()
                        .HasForeignKey("Pigmt_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Producto", "TpProd")
                        .WithMany()
                        .HasForeignKey("TpProd_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipos_Sellados", "TiposSellados")
                        .WithMany()
                        .HasForeignKey("TpSellado_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed2")
                        .WithMany()
                        .HasForeignKey("UndMedACF")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed1")
                        .WithMany()
                        .HasForeignKey("UndMedPeso")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("MaterialMP");

                    b.Navigation("Pigmt");

                    b.Navigation("TiposSellados");

                    b.Navigation("TpProd");

                    b.Navigation("UndMed1");

                    b.Navigation("UndMed2");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Productos_MateriasPrimas", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "Bopp_Generico")
                        .WithMany()
                        .HasForeignKey("Bopp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Existencia_Productos", "Existencia_Productos")
                        .WithMany()
                        .HasForeignKey("ExProd_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "Materia_Prima")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "Unidad_Medida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bopp_Generico");

                    b.Navigation("Existencia_Productos");

                    b.Navigation("Materia_Prima");

                    b.Navigation("Producto");

                    b.Navigation("Tinta");

                    b.Navigation("Unidad_Medida");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Provedor_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Prov")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("Prov");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Proveedor", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Conceptos_Automaticos", "CA_ReteFuente")
                        .WithMany()
                        .HasForeignKey("ReteFuente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Conceptos_Automaticos", "CA_ReteICA")
                        .WithMany()
                        .HasForeignKey("ReteICA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Conceptos_Automaticos", "CA_ReteIVA")
                        .WithMany()
                        .HasForeignKey("ReteIVA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Proveedor", "TpProv")
                        .WithMany()
                        .HasForeignKey("TpProv_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CA_ReteFuente");

                    b.Navigation("CA_ReteICA");

                    b.Navigation("CA_ReteIVA");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("TpProv");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Recuperado_MatPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Turno", "TurnoRecMP")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "UsuaOperador")
                        .WithMany()
                        .HasForeignKey("Usua_Operador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proceso");

                    b.Navigation("TurnoRecMP");

                    b.Navigation("Usua");

                    b.Navigation("UsuaOperador");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proveedor", "Prov")
                        .WithMany()
                        .HasForeignKey("Prov_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Documento", "TpDoc")
                        .WithMany()
                        .HasForeignKey("TpDoc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Prov");

                    b.Navigation("TpDoc");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_FacturaCompra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Factura_Compra", "Faccom")
                        .WithMany()
                        .HasForeignKey("Facco_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Remision", "Remi")
                        .WithMany()
                        .HasForeignKey("Rem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faccom");

                    b.Navigation("Remi");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Bopp_Generico", "Bopp")
                        .WithMany()
                        .HasForeignKey("Bopp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Remision", "Rem")
                        .WithMany()
                        .HasForeignKey("Rem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bopp");

                    b.Navigation("MatPri");

                    b.Navigation("Rem");

                    b.Navigation("Tinta");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Remision_OrdenCompra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Orden_Compra", "Orden_Compra")
                        .WithMany()
                        .HasForeignKey("Oc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Remision", "Remision")
                        .WithMany()
                        .HasForeignKey("Rem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orden_Compra");

                    b.Navigation("Remision");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Rollo_Desecho", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Cono", "Cono")
                        .WithMany()
                        .HasForeignKey("Cono_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Material_MatPrima", "Material")
                        .WithMany()
                        .HasForeignKey("Material_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Producto", "Prod")
                        .WithMany()
                        .HasForeignKey("Prod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMedida")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cono");

                    b.Navigation("Estado");

                    b.Navigation("Material");

                    b.Navigation("Proceso");

                    b.Navigation("Prod");

                    b.Navigation("Turno");

                    b.Navigation("UndMedida");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.SedesClientes", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Clientes", "Cli")
                        .WithMany()
                        .HasForeignKey("Cli_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cli");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Solicitud_MatPrimaExtrusion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("Proceso_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usua")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Proceso");

                    b.Navigation("Usua");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Solicitud_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Solicitud_Rollos_Areas", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Solicitud_Rollos_Areas", "Tipo_solicitud")
                        .WithMany()
                        .HasForeignKey("TpSol_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "UsuarioRespuesta")
                        .WithMany()
                        .HasForeignKey("Usua_Respuesta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Tipo_solicitud");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioRespuesta");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.SolicitudesMP_OrdenesCompra", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Orden_Compra", "Orden_Compra")
                        .WithMany()
                        .HasForeignKey("Oc_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Solicitud_MateriaPrima", "Solicitud_MateriaPrima")
                        .WithMany()
                        .HasForeignKey("Solicitud_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orden_Compra");

                    b.Navigation("Solicitud_MateriaPrima");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Terceros", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tickets", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tickets_Revisados", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Tickets", "Tickets")
                        .WithMany()
                        .HasForeignKey("Ticket_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tickets");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tinta", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Categoria_MatPrima", "CatMP")
                        .WithMany()
                        .HasForeignKey("CatMP_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Bodega", "TpBod")
                        .WithMany()
                        .HasForeignKey("TpBod_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Unidad_Medida", "UndMed")
                        .WithMany()
                        .HasForeignKey("UndMed_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CatMP");

                    b.Navigation("TpBod");

                    b.Navigation("UndMed");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tinta_MateriaPrima", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Materia_Prima", "MatPri")
                        .WithMany()
                        .HasForeignKey("MatPri_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tinta", "Tinta")
                        .WithMany()
                        .HasForeignKey("Tinta_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatPri");

                    b.Navigation("Tinta");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Tipo_Bodega", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Usuario", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Rol_Usuario", "RolUsu")
                        .WithMany()
                        .HasForeignKey("RolUsu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.cajaCompensacion", "cajComp")
                        .WithMany()
                        .HasForeignKey("cajComp_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.EPS", "EPS")
                        .WithMany()
                        .HasForeignKey("eps_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.fondoPension", "fPen")
                        .WithMany()
                        .HasForeignKey("fPen_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlasticaribeAPI.Models.Tipo_Usuario", "tpUsu")
                        .WithMany()
                        .HasForeignKey("tpUsu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("EPS");

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("RolUsu");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("cajComp");

                    b.Navigation("fPen");

                    b.Navigation("tpUsu");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.VistasFavoritas", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usua_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Vistas_Permisos", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Vp_Estado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.cajaCompensacion", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.fondoPension", b =>
                {
                    b.HasOne("PlasticaribeAPI.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.AsignacionProducto_FacturaVenta", b =>
                {
                    b.Navigation("DtAsigProd_FVTA");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Asignacion_BOPP", b =>
                {
                    b.Navigation("DetAsigBOPP");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.BOPP", b =>
                {
                    b.Navigation("DetAsigBOPP");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Devolucion_ProductoFacturado", b =>
                {
                    b.Navigation("DtDevProd_Fact");
                });

            modelBuilder.Entity("PlasticaribeAPI.Models.Producto", b =>
                {
                    b.Navigation("DtAsigProd_FVTA");

                    b.Navigation("DtDevProd_Fact");
                });
#pragma warning restore 612, 618
        }
    }
}
